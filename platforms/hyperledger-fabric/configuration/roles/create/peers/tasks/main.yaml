##############################################################################################
#  Copyright Accenture. All Rights Reserved.
#
#  SPDX-License-Identifier: Apache-2.0
##############################################################################################

#############################################################################################
# This role creates the value file for peers of organisations and write couch db credentials
# to the vault.
#############################################################################################

# This task delete the previously created ca-tools release file
- name: Delete release from peers
  file:
    path: "{{ values_dir }}/{{ name }}/values-{{ peer.name }}.yaml"
    state: absent
  vars:
    name: "{{ item.name | lower }}"
  loop: "{{ component_services.peers }}"
  loop_control:
    loop_var: peer 
  when: refresh_cert is defined and refresh_cert == 'true'

#Git Push : Deleting the previously created CA-Tools value file
- name: Git Push
  include_role: 
    name: "{{ playbook_dir }}/../../shared/configuration/roles/git_push"
  vars:
    GIT_DIR: "{{ playbook_dir }}/../../../"
    gitops: "{{ item.gitops }}"
    GIT_RESET_PATH: "platforms/hyperledger-fabric/configuration"
    msg: "[ci skip] Deleting the previously created CA-Tools value file"
  when: refresh_cert is defined and refresh_cert == 'true'

# This task delete the previously created ca-tools HelmRelease
- name: Delete the previous CA-Tools HelmRelease
  k8s:
    kind: HelmRelease
    name: "{{ item.name | lower }}-{{ peer.name }}"
    namespace: "{{ namespace }}"
    state: absent
    kubeconfig: "{{ item.k8s.config_file }}"
    context: "{{ item.k8s.context }}"
  loop: "{{ component_services.peers }}"
  loop_control:
    loop_var: peer 
  when: refresh_cert is defined and refresh_cert == 'true'

############################################################################################
# This task is the nested task for main.yaml which helps to iterate over all peers
- name: Create Value files for Organization Peers
  include_role:
    name: helm_component
  vars:
    name: "{{ item.name | lower }}"
    type: "value_peer"
    component_name: values-{{ peer.name }}
    couchdb_image: "{{ couchdb_image_version[network.version] }}"
    peer_image: "hyperledger/fabric-peer:{{ network.version }}"
    alpine_image: "{{ docker_url }}/alpine-utils:1.0"
    peer_name: "{{ peer.name }}"
    peer_ns: "{{ namespace }}"
    provider: "{{ network.env.proxy }}"
  loop: "{{ component_services.peers }}"
  loop_control:
    loop_var: peer 
  when: peer.peerstatus is not defined or peer.peerstatus == 'new'

#Git Push : Pushes the above generated files to git directory 
- name: Git Push
  include_role: 
    name: "{{ playbook_dir }}/../../shared/configuration/roles/git_push"
  vars:
    GIT_DIR: "{{ playbook_dir }}/../../../"
    gitops: "{{ item.gitops }}"
    GIT_RESET_PATH: "platforms/hyperledger-fabric/configuration"
    msg: "[ci skip] Pushing Peer files"
  tags:
    - notest

# Wait for peer pods to be in the state of running
- name: "Waiting for peer pod {{ peer.name }} in {{ item.name | lower }}-net"
  include_role:
    name: "{{ playbook_dir }}/../../shared/configuration/roles/check/helm_component"
  vars:
    component_type: "Pod"
    namespace: "{{ item.name | lower }}-net"
    component_name: "{{ peer.name }}"
    kubernetes: "{{ item.k8s }}"
    label_selectors:
      - app = {{ component_name }}
  loop: "{{ component_services.peers }}"
  loop_control:
    loop_var: peer 
  when: peer.peerstatus is not defined or peer.peerstatus == 'new'
  tags:
    - notest
