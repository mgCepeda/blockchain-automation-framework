##############################################################################################
#  Copyright Accenture. All Rights Reserved.
#
#  SPDX-License-Identifier: Apache-2.0
##############################################################################################

# This playbook adds an orderer to a DLT network on existing Kubernetes clusters
# The Kubernetes clusters should already be created and the infomation to connect to the
#  clusters be updated in the network.yaml file that is used as an input to this playbook
###########################################################################################
# To Run this playbook from this directory, use the following command (network.yaml also in this directory)
#  ansible-playbook add-orderer.yaml -e "@./network.yaml" -e "add_orderer=true"
############################################################################################
# Please ensure that the ../../shared/configuration playbooks have been run and a DLT network exists.
---
  # This will apply to ansible_provisioners. /etc/ansible/hosts should be configured with this group
- hosts: ansible_provisioners
  gather_facts: no
  no_log: "{{ no_ansible_log | default(false) }}"
  tasks:
  #delete build directory
  - name: Remove build directory
    file:
      path: "./build"
      state: absent

  # Generate script to modify the fetched configuration block
  - name: "Modify the system channel with tls information of new orderer"
    include_role:
      name: "create/refresh_certs/fetch_old_cert"
    vars:
      build_path: "./build"
      orderers: "{{ org.services.orderers }}"
      vault: "{{ org.vault }}"
      component_ns: "{{ org.name | lower}}-net"
    loop: "{{ network.organizations }}"
    loop_control:
      loop_var: org
    when: org.type == 'orderer'
  
  # # This role creates value file new orderer
  # - name: "create new orderer"
  #   include_role:
  #     name: "create/orderers"
  #   vars:
  #     build_path: "./build"
  #     namespace: "{{ item.name | lower}}-net"
  #     component_type: "{{ item.type | lower}}"
  #     component_services: "{{ item.services }}"
  #     vault: "{{ item.vault }}"
  #     git_protocol: "{{ item.gitops.git_protocol }}"
  #     git_url: "{{ item.gitops.git_url }}"
  #     git_branch: "{{ item.gitops.branch }}"
  #     docker_url: "{{ network.docker.url }}"
  #     charts_dir: "{{ item.gitops.chart_source }}"
  #     values_dir: "{{playbook_dir}}/../../../{{item.gitops.release_dir}}/{{ item.name | lower }}"
  #   loop: "{{ network['organizations'] }}"
  #   when: item.type == 'orderer'
  
  # - pause:
  #     prompt: "testing playbook"
  #     minutes: 6

  # Create CA Tools helm-value files and check-in
  - name: Create CA tools for each organization
    include_role:
      name: "create/ca-tools/orderer"
    vars:
      component_name: "{{ item.name | lower}}-net"
      component: "{{ item.name | lower}}"
      component_type: "{{ item.type | lower}}"
      component_services: "{{ item.services }}"
      kubernetes: "{{ item.k8s }}"
      vault: "{{ item.vault }}"
      ca: "{{ item.services.ca }}"
      gitops: "{{ item.gitops }}"
      values_dir: "{{playbook_dir}}/../../../{{item.gitops.release_dir}}/{{ item.name | lower }}"
    loop: "{{ network['organizations'] }}"
    when: item.type == 'orderer'
  
# Generate script to modify the fetched configuration block
  - name: "Modify the system channel with tls information of new orderer"
    include_role:
      name: "create/refresh_certs/create_syschannel_block"
    vars:
      build_path: "./build"
      orderers: "{{ org.services.orderers }}"
      docker_url: "{{ network.docker.url }}"
      channel_name: "syschannel"
      vault: "{{ org.vault }}"
      component_ns: "{{ org.name | lower}}-net"
    loop: "{{ network.organizations }}"
    loop_control:
      loop_var: org
    when: org.type == 'orderer'

  # #Create Organization crypto materials for new organization
  # - include_role:
  #     name: "create/ca-tools/peer"
  #   vars:
  #     component_name: "{{ item.name | lower}}-net"
  #     component: "{{ item.name | lower}}"
  #     component_type: "{{ item.type | lower}}"
  #     component_services: "{{ item.services }}"
  #     kubernetes: "{{ item.k8s }}"
  #     vault: "{{ item.vault }}"
  #     ca: "{{ item.services.ca }}"
  #     gitops: "{{ item.gitops }}"
  #     values_dir: "{{playbook_dir}}/../../../{{item.gitops.release_dir}}/{{ item.name | lower }}"
  #   loop: "{{ network['organizations'] }}"
  #   when: item.type == 'peer'
  
  # # This role creates the value file for peers of organisations and write couch db credentials
  # # to the vault.
  # - name: Create all peers
  #   include_role:
  #       name: "create/peers"
  #   vars:
  #     build_path: "./build"
  #     namespace: "{{ item.name | lower}}-net"
  #     component_type: "{{ item.type | lower}}"
  #     component_services: "{{ item.services }}"
  #     vault: "{{ item.vault }}"
  #     git_protocol: "{{ item.gitops.git_protocol }}"
  #     git_url: "{{ item.gitops.git_url }}"
  #     git_branch: "{{ item.gitops.branch }}"
  #     docker_url: "{{ network.docker.url }}"
  #     charts_dir: "{{ item.gitops.chart_source }}"
  #     values_dir: "{{playbook_dir}}/../../../{{item.gitops.release_dir}}/{{ item.name | lower }}"
  #   loop: "{{ network['organizations'] }}"
  #   when: item.type == 'peer'

  # # Create CLI pod for peers with cli option enabled
  # - name: Create CLI pod for each peer with it enabled
  #   include_role:
  #     name: "create/cli_pod"
  #   vars:
  #     peers: "{{ org.services.peers }}"
  #     docker_url: "{{ network.docker.url }}"
  #     values_dir: "{{playbook_dir}}/../../../{{org.gitops.release_dir}}/{{ org.name | lower }}"
  #   loop: "{{ network.organizations }}"
  #   loop_control:
  #     loop_var: org
  #   when: org.type == "peer" and org.org_status == "new"
   
  # # Generate script to modify the fetched configuration block
  # - name: "Modify the system channel with tls information of new orderer"
  #   include_role:
  #     name: "create/new_orderer/create_syschannel_block"
  #   vars:
  #     build_path: "./build"
  #     orderers: "{{ org.services.orderers }}"
  #     docker_url: "{{ network.docker.url }}"
  #     channel_name: "syschannel"
  #     update_type: "tls"
  #     component_ns: "{{ org.name | lower}}-net"
  #   loop: "{{ network.organizations }}"
  #   loop_control:
  #     loop_var: org
  #   when: org.type == 'orderer'

  # # This role creates value file new orderer
  # - name: "create new orderer"
  #   include_role:
  #     name: "create/orderers"
  #   vars:
  #     build_path: "./build"
  #     namespace: "{{ item.name | lower}}-net"
  #     component_type: "{{ item.type | lower}}"
  #     component_services: "{{ item.services }}"
  #     vault: "{{ item.vault }}"
  #     git_protocol: "{{ item.gitops.git_protocol }}"
  #     git_url: "{{ item.gitops.git_url }}"
  #     git_branch: "{{ item.gitops.branch }}"
  #     docker_url: "{{ network.docker.url }}"
  #     charts_dir: "{{ item.gitops.chart_source }}"
  #     values_dir: "{{playbook_dir}}/../../../{{item.gitops.release_dir}}/{{ item.name | lower }}"
  #   loop: "{{ network['organizations'] }}"
  #   when: item.type == 'orderer'

  # # Generate script to modify the fetched configuration block
  # - name: "Modify the system channel with endpoint information of new orderer"
  #   include_role:
  #     name: "create/new_orderer/create_syschannel_block"
  #   vars:
  #     build_path: "./build"
  #     orderers: "{{ org.services.orderers }}"
  #     docker_url: "{{ network.docker.url }}"
  #     channel_name: "syschannel"
  #     update_type: "address"
  #     component_ns: "{{ org.name | lower}}-net"
  #   loop: "{{ network.organizations }}"
  #   loop_control:
  #     loop_var: org
  #   when: org.type == 'orderer'

  # # Generate script to modify the fetched configuration block from application channel
  # - name: "Modify the application channel with tls and address information of new orderer"
  #   include_role:
  #     name: "create/new_orderer/create_appchannel_block"
  #   vars:
  #     build_path: "./build"
  #     channel_name: "{{ channel.channel_name | lower }}"
  #     docker_url: "{{ network.docker.url }}"
  #   loop: "{{ network.channels }}"
  #   loop_control:
  #     loop_var: channel

  vars: #These variables can be overriden from the command line
    privilege_escalate: false           #Default to NOT escalate to root privledges
    install_os: "linux"                 #Default to linux OS
    install_arch:  "amd64"              #Default to amd64 architecture
    bin_install_dir:  "~/bin"           #Default to /bin install directory for binaries
    refresh_cert: 'true'                #Default for this playbook is true
    add_new_org: 'false'                #Default for this playbook is false

