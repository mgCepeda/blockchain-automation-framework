apiVersion: helm.fluxcd.io/v1
kind: HelmRelease
metadata:
  name: smar-orderer1
  namespace: smar-net
  annotations:
    fluxcd.io/automated: "false"
spec:
  releaseName: smar-orderer1
  chart:
    git: https://github.com/mgCepeda/blockchain-automation-framework.git
    ref: feature-1429
    path: platforms/hyperledger-fabric/charts/orderernode
    secretRef:
      name: gitcredentials
  values:
    metadata:
      namespace: smar-net
      images:
        orderer: hyperledger/fabric-orderer:2.2.2
        alpineutils: index.docker.io/hyperledgerlabs/alpine-utils:1.0
    orderer:
      name: orderer1
      loglevel: info
      localmspid: smarMSP
      tlsstatus: true
      keepaliveserverinterval: 10s
      refresh_cert_value: False
    
    consensus:
      name: raft

    storage:
      storageclassname: smarsc
      storagesize: 512Mi  

    service:
      servicetype: ClusterIP
      ports:
        grpc:
          clusteripport: 7050

    vault:
      address: http://vault.internal.dev2.aws.blockchaincloudpoc-develop.com:20001
      role: vault-role
      authpath: marsmar-net-auth
      secretprefix: secretsv2/data/crypto/ordererOrganizations/smar-net/orderers/orderer1.smar-net
      imagesecretname: regcred
      serviceaccountname: vault-auth

    proxy:
      provider: haproxy
      external_url_suffix: hf.dev2.aws.blockchaincloudpoc-develop.com

    genesis: |-
      CiIaIC+EU8tFIYDRwxECYlURUKda+VPBwLTOS+SeLy5K2rATEpFqCo5qCotqCngKWggBEAEaBgjT
      vOSWBiIKc3lzY2hhbm5lbCpAMmI4YzkwODhhNjY2NTVlNzM3ZTZlODVkYzMwYjJmZGQ2MzA0MzQ1
      MTljNThhZGVjYzVmMDQ0MDQ0NTA3YTQ5ORIaEhhWP6W4gtIEQspK6YC9HUl2z5FQYdlrKJYSjmkK
      i2kSiGkS6E0KB09yZGVyZXIS3E0S4BUKB3NtYXJNU1AS1BUa/BMKA01TUBL0ExLpExLmEwoHc21h
      ck1TUBLdBS0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlCOFRDQ0FaaWdBd0lCQWdJVUs5
      Zmpsb0ZveXg4dVdhcC83T0RnU3R6N1dHRXdDZ1lJS29aSXpqMEVBd0l3ClZ6RUxNQWtHQTFVRUJo
      TUNSMEl4RHpBTkJnTlZCQWdNQmt4dmJtUnZiakVQTUEwR0ExVUVCd3dHVEc5dVpHOXUKTVJBd0Rn
      WURWUVFLREFkUGNtUmxjbVZ5TVJRd0VnWURWUVFEREF0allTNXpiV0Z5TFc1bGREQWVGdzB5TWpB
      MwpNakV3T1RJek5UbGFGdzB5TlRBMU1UQXdPVEl6TlRsYU1GY3hDekFKQmdOVkJBWVRBa2RDTVE4
      d0RRWURWUVFJCkRBWk1iMjVrYjI0eER6QU5CZ05WQkFjTUJreHZibVJ2YmpFUU1BNEdBMVVFQ2d3
      SFQzSmtaWEpsY2pFVU1CSUcKQTFVRUF3d0xZMkV1YzIxaGNpMXVaWFF3V1RBVEJnY3Foa2pPUFFJ
      QkJnZ3Foa2pPUFFNQkJ3TkNBQVN2M01aeAorNng3ZHdRZm1nNGtSZ1dOeVFXUG5BNUlCNGlidFQr
      bE4wUUhVTDR4Tm5yQlNqQzNMVUJHRkxDOFN4TElMYyt4ClBEQ2RvdjBhZk03aDgrL3lvMEl3UURB
      UEJnTlZIUk1CQWY4RUJUQURBUUgvTUE0R0ExVWREd0VCL3dRRUF3SUIKcGpBZEJnTlZIUTRFRmdR
      VTQvcWtHd1hZN3BwTTBrYWlRYm8vSjdQdnJoRXdDZ1lJS29aSXpqMEVBd0lEUndBdwpSQUlnWUMx
      ZWxtVy9CS3FFRTgwWXprUUk3WmUyU3VWa1BZcWV5NTFSdHczZlA3NENJQVdzYTFSY2Y5cm1RWVpM
      CmRGTWdHUHpBdTZTcHVIOGd5b2VheGJLcjI2RXUKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQoi
      iggtLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0KTUlJQ3pUQ0NBbk9nQXdJQkFnSVVYdkFYMXEw
      L3ZScEYwckM3dEdKRzNuampJLzh3Q2dZSUtvWkl6ajBFQXdJdwpWekVMTUFrR0ExVUVCaE1DUjBJ
      eER6QU5CZ05WQkFnTUJreHZibVJ2YmpFUE1BMEdBMVVFQnd3R1RHOXVaRzl1Ck1SQXdEZ1lEVlFR
      S0RBZFBjbVJsY21WeU1SUXdFZ1lEVlFRRERBdGpZUzV6YldGeUxXNWxkREFlRncweU1qQTMKTWpF
      d09USTVNREJhRncweU16QTNNakV3T1RNME1EQmFNR1V4Q3pBSkJnTlZCQVlUQWtkQ01Sc3dHUVlE
      VlFRSApFeEkxTVM0MU1DOHRNQzR4TXk5TWIyNWtiMjR4RURBT0JnTlZCQW9UQjA5eVpHVnlaWEl4
      RGpBTUJnTlZCQXNUCkJXRmtiV2x1TVJjd0ZRWURWUVFEREE1QlpHMXBia0J6YldGeUxXNWxkREJa
      TUJNR0J5cUdTTTQ5QWdFR0NDcUcKU000OUF3RUhBMElBQkt5cmUzN0c2bTF1b1dGcmRrZlRydWRL
      YXJHTjRJTEVzL1NseDZ5dlV0UVN3T0YzZ3BvSQorbldtMjZRVUlKNlB1NnNUQVBxcE5XMDVYdEZi
      OFM3RllJNmpnZ0VOTUlJQkNUQU9CZ05WSFE4QkFmOEVCQU1DCkI0QXdEQVlEVlIwVEFRSC9CQUl3
      QURBZEJnTlZIUTRFRmdRVUE0aWdiTklhVG1TRCsxL001N1BJWWhoNG90WXcKSHdZRFZSMGpCQmd3
      Rm9BVTQvcWtHd1hZN3BwTTBrYWlRYm8vSjdQdnJoRXdKQVlEVlIwUkJCMHdHNElaWTJFdApkRzl2
      YkhNdE5XSTVPR00yWkRrMVpDMTZkRGxpWnpDQmdnWUlLZ01FQlFZSENBRUVkbnNpWVhSMGNuTWlP
      bnNpCllXSmhZeTVwYm1sMElqb2lkSEoxWlNJc0ltRmtiV2x1SWpvaWRISjFaU0lzSW1obUxrRm1a
      bWxzYVdGMGFXOXUKSWpvaUlpd2lhR1l1Ulc1eWIyeHNiV1Z1ZEVsRUlqb2lRV1J0YVc1QWMyMWhj
      aTF1WlhRaUxDSm9aaTVVZVhCbApJam9pWVdSdGFXNGlmWDB3Q2dZSUtvWkl6ajBFQXdJRFNBQXdS
      UUloQUpTYi9SNVNsSkNYOVNVMGhCUjJRZ05DCnpzb3IrazJxcVI1SWRvVm41azNWQWlCWmlRSGhq
      cEszNUR4RmkxUHdTaHFIaVB6eFowRmFBTWdCTVNVUWx4QjEKQ2c9PQotLS0tLUVORCBDRVJUSUZJ
      Q0FURS0tLS0tCkIOCgRTSEEyEgZTSEEyNTZK3QUtLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0K
      TUlJQjhUQ0NBWmlnQXdJQkFnSVVLOWZqbG9Gb3l4OHVXYXAvN09EZ1N0ejdXR0V3Q2dZSUtvWkl6
      ajBFQXdJdwpWekVMTUFrR0ExVUVCaE1DUjBJeER6QU5CZ05WQkFnTUJreHZibVJ2YmpFUE1BMEdB
      MVVFQnd3R1RHOXVaRzl1Ck1SQXdEZ1lEVlFRS0RBZFBjbVJsY21WeU1SUXdFZ1lEVlFRRERBdGpZ
      UzV6YldGeUxXNWxkREFlRncweU1qQTMKTWpFd09USXpOVGxhRncweU5UQTFNVEF3T1RJek5UbGFN
      RmN4Q3pBSkJnTlZCQVlUQWtkQ01ROHdEUVlEVlFRSQpEQVpNYjI1a2IyNHhEekFOQmdOVkJBY01C
      a3h2Ym1SdmJqRVFNQTRHQTFVRUNnd0hUM0prWlhKbGNqRVVNQklHCkExVUVBd3dMWTJFdWMyMWhj
      aTF1WlhRd1dUQVRCZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DQUFTdjNNWngKKzZ4N2R3UWZt
      ZzRrUmdXTnlRV1BuQTVJQjRpYnRUK2xOMFFIVUw0eE5uckJTakMzTFVCR0ZMQzhTeExJTGMreApQ
      RENkb3YwYWZNN2g4Ky95bzBJd1FEQVBCZ05WSFJNQkFmOEVCVEFEQVFIL01BNEdBMVVkRHdFQi93
      UUVBd0lCCnBqQWRCZ05WSFE0RUZnUVU0L3FrR3dYWTdwcE0wa2FpUWJvL0o3UHZyaEV3Q2dZSUtv
      Wkl6ajBFQXdJRFJ3QXcKUkFJZ1lDMWVsbVcvQktxRUU4MFl6a1FJN1plMlN1VmtQWXFleTUxUnR3
      M2ZQNzRDSUFXc2ExUmNmOXJtUVlaTApkRk1nR1B6QXU2U3B1SDhneW9lYXhiS3IyNkV1Ci0tLS0t
      RU5EIENFUlRJRklDQVRFLS0tLS0KGgZBZG1pbnMiMQoGQWRtaW5zEicSHQgBEhkSCBIGCAESAggA
      Gg0SCwoHc21hck1TUBABGgZBZG1pbnMiNAoLRW5kb3JzZW1lbnQSJRIbCAESFxIIEgYIARICCAAa
      CxIJCgdzbWFyTVNQGgZBZG1pbnMiMAoHUmVhZGVycxIlEhsIARIXEggSBggBEgIIABoLEgkKB3Nt
      YXJNU1AaBkFkbWlucyIwCgdXcml0ZXJzEiUSGwgBEhcSCBIGCAESAggAGgsSCQoHc21hck1TUBoG
      QWRtaW5zKgZBZG1pbnMaIgoJQmF0Y2hTaXplEhUSCwgKEICAgDEYgIBAGgZBZG1pbnMaHgoMQmF0
      Y2hUaW1lb3V0Eg4SBAoCMnMaBkFkbWlucxofChNDaGFubmVsUmVzdHJpY3Rpb25zEggaBkFkbWlu
      cxokCgxDYXBhYmlsaXRpZXMSFBIKCggKBFYyXzASABoGQWRtaW5zGss1Cg1Db25zZW5zdXNUeXBl
      Erk1Eq41CghldGNkcmFmdBKhNQrUEQozb3JkZXJlcjEuaGYuZGV2Mi5hd3MuYmxvY2tjaGFpbmNs
      b3VkcG9jLWRldmVsb3AuY29tEPtBGssILS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUMv
      ekNDQXFhZ0F3SUJBZ0lVY0Z0ZzE4OCt6UXJHTkRiczhGL21nRHBjNzVjd0NnWUlLb1pJemowRUF3
      SXcKVnpFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3
      d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWRQY21SbGNtVnlNUlF3RWdZRFZRUUREQXRqWVM1emJX
      RnlMVzVsZERBZUZ3MHlNakEzCk1qRXdPVEk1TURCYUZ3MHlNekEzTWpFd09UTTBNREJhTUdveEN6
      QUpCZ05WQkFZVEFrZENNUnN3R1FZRFZRUUgKRXhJMU1TNDFNQzh0TUM0eE15OU1iMjVrYjI0eEVE
      QU9CZ05WQkFvVEIwOXlaR1Z5WlhJeEVEQU9CZ05WQkFzVApCMjl5WkdWeVpYSXhHakFZQmdOVkJB
      TVRFVzl5WkdWeVpYSXhMbk50WVhJdGJtVjBNRmt3RXdZSEtvWkl6ajBDCkFRWUlLb1pJemowREFR
      Y0RRZ0FFZXV2aHNaNXViZE9xRHRvSWZSWDJiWmkyaWNKdEdVcmgxY2IvWm81UHNmOC8KQnB2U0lG
      NjJPM1hvT09jQzkyOWRmbUNhVWdRdndCbnh3ZlV2ckhjbjFhT0NBVHN3Z2dFM01BNEdBMVVkRHdF
      Qgovd1FFQXdJRHFEQWRCZ05WSFNVRUZqQVVCZ2dyQmdFRkJRY0RBUVlJS3dZQkJRVUhBd0l3REFZ
      RFZSMFRBUUgvCkJBSXdBREFkQmdOVkhRNEVGZ1FVQXlVK1RCZStBWGkwaTliejZmVEtidlN6ZVlR
      d0h3WURWUjBqQkJnd0ZvQVUKNC9xa0d3WFk3cHBNMGthaVFiby9KN1B2cmhFd1VRWURWUjBSQkVv
      d1NJSVJiM0prWlhKbGNqRXVjMjFoY2kxdQpaWFNDTTI5eVpHVnlaWEl4TG1obUxtUmxkakl1WVhk
      ekxtSnNiMk5yWTJoaGFXNWpiRzkxWkhCdll5MWtaWFpsCmJHOXdMbU52YlRCbEJnZ3FBd1FGQmdj
      SUFRUlpleUpoZEhSeWN5STZleUpvWmk1QlptWnBiR2xoZEdsdmJpSTYKSWlJc0ltaG1Ma1Z1Y205
      c2JHMWxiblJKUkNJNkltOXlaR1Z5WlhJeExuTnRZWEl0Ym1WMElpd2lhR1l1VkhsdwpaU0k2SW05
      eVpHVnlaWElpZlgwd0NnWUlLb1pJemowRUF3SURSd0F3UkFJZ0FkbGFaeGVSM3R3SGFPYUhkSUU4
      CktkK1hMVXNKRUtmR0lzVzlDS1UzNU1FQ0lEWmxKK1RQdzJTRjZtdERPMGJjNlUrbTcrVHZtN29r
      d3ZvMHRSOWoKTTVuVAotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCiLLCC0tLS0tQkVHSU4gQ0VS
      VElGSUNBVEUtLS0tLQpNSUlDL3pDQ0FxYWdBd0lCQWdJVWNGdGcxODgrelFyR05EYnM4Ri9tZ0Rw
      Yzc1Y3dDZ1lJS29aSXpqMEVBd0l3ClZ6RUxNQWtHQTFVRUJoTUNSMEl4RHpBTkJnTlZCQWdNQmt4
      dmJtUnZiakVQTUEwR0ExVUVCd3dHVEc5dVpHOXUKTVJBd0RnWURWUVFLREFkUGNtUmxjbVZ5TVJR
      d0VnWURWUVFEREF0allTNXpiV0Z5TFc1bGREQWVGdzB5TWpBMwpNakV3T1RJNU1EQmFGdzB5TXpB
      M01qRXdPVE0wTURCYU1Hb3hDekFKQmdOVkJBWVRBa2RDTVJzd0dRWURWUVFICkV4STFNUzQxTUM4
      dE1DNHhNeTlNYjI1a2IyNHhFREFPQmdOVkJBb1RCMDl5WkdWeVpYSXhFREFPQmdOVkJBc1QKQjI5
      eVpHVnlaWEl4R2pBWUJnTlZCQU1URVc5eVpHVnlaWEl4TG5OdFlYSXRibVYwTUZrd0V3WUhLb1pJ
      emowQwpBUVlJS29aSXpqMERBUWNEUWdBRWV1dmhzWjV1YmRPcUR0b0lmUlgyYlppMmljSnRHVXJo
      MWNiL1pvNVBzZjgvCkJwdlNJRjYyTzNYb09PY0M5MjlkZm1DYVVnUXZ3Qm54d2ZVdnJIY24xYU9D
      QVRzd2dnRTNNQTRHQTFVZER3RUIKL3dRRUF3SURxREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNE
      QVFZSUt3WUJCUVVIQXdJd0RBWURWUjBUQVFILwpCQUl3QURBZEJnTlZIUTRFRmdRVUF5VStUQmUr
      QVhpMGk5Yno2ZlRLYnZTemVZUXdId1lEVlIwakJCZ3dGb0FVCjQvcWtHd1hZN3BwTTBrYWlRYm8v
      SjdQdnJoRXdVUVlEVlIwUkJFb3dTSUlSYjNKa1pYSmxjakV1YzIxaGNpMXUKWlhTQ00yOXlaR1Z5
      WlhJeExtaG1MbVJsZGpJdVlYZHpMbUpzYjJOclkyaGhhVzVqYkc5MVpIQnZZeTFrWlhabApiRzl3
      TG1OdmJUQmxCZ2dxQXdRRkJnY0lBUVJaZXlKaGRIUnljeUk2ZXlKb1ppNUJabVpwYkdsaGRHbHZi
      aUk2CklpSXNJbWhtTGtWdWNtOXNiRzFsYm5SSlJDSTZJbTl5WkdWeVpYSXhMbk50WVhJdGJtVjBJ
      aXdpYUdZdVZIbHcKWlNJNkltOXlaR1Z5WlhJaWZYMHdDZ1lJS29aSXpqMEVBd0lEUndBd1JBSWdB
      ZGxhWnhlUjN0d0hhT2FIZElFOApLZCtYTFVzSkVLZkdJc1c5Q0tVMzVNRUNJRFpsSitUUHcyU0Y2
      bXRETzBiYzZVK203K1R2bTdva3d2bzB0UjlqCk01blQKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0t
      LQoK1BEKM29yZGVyZXIyLmhmLmRldjIuYXdzLmJsb2NrY2hhaW5jbG91ZHBvYy1kZXZlbG9wLmNv
      bRD7QRrLCC0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlDL3pDQ0FxYWdBd0lCQWdJVU13
      czZOcjRwZjkrbkNMTkpkekdkMDVibk83d3dDZ1lJS29aSXpqMEVBd0l3ClZ6RUxNQWtHQTFVRUJo
      TUNSMEl4RHpBTkJnTlZCQWdNQmt4dmJtUnZiakVQTUEwR0ExVUVCd3dHVEc5dVpHOXUKTVJBd0Rn
      WURWUVFLREFkUGNtUmxjbVZ5TVJRd0VnWURWUVFEREF0allTNXpiV0Z5TFc1bGREQWVGdzB5TWpB
      MwpNakV3T1RJNU1EQmFGdzB5TXpBM01qRXdPVE0wTURCYU1Hb3hDekFKQmdOVkJBWVRBa2RDTVJz
      d0dRWURWUVFICkV4STFNUzQxTUM4dE1DNHhNeTlNYjI1a2IyNHhFREFPQmdOVkJBb1RCMDl5WkdW
      eVpYSXhFREFPQmdOVkJBc1QKQjI5eVpHVnlaWEl4R2pBWUJnTlZCQU1URVc5eVpHVnlaWEl5TG5O
      dFlYSXRibVYwTUZrd0V3WUhLb1pJemowQwpBUVlJS29aSXpqMERBUWNEUWdBRWI5MFN4TWl3WHhR
      TE11NFJrdGJra1RuZVhnM0RoRXJUbTNBUmFNVjJqTnB5CjlYNW4zK1pvVGpvTFduNjhJZHdqQnpM
      SWZ3ZThMOWlXQ1d6Z0FzeHg4YU9DQVRzd2dnRTNNQTRHQTFVZER3RUIKL3dRRUF3SURxREFkQmdO
      VkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0RBWURWUjBUQVFILwpCQUl3QURB
      ZEJnTlZIUTRFRmdRVUlQU3ZRdmthSHJOcC9pVzJ2SGZJNytybnE3c3dId1lEVlIwakJCZ3dGb0FV
      CjQvcWtHd1hZN3BwTTBrYWlRYm8vSjdQdnJoRXdVUVlEVlIwUkJFb3dTSUlSYjNKa1pYSmxjakl1
      YzIxaGNpMXUKWlhTQ00yOXlaR1Z5WlhJeUxtaG1MbVJsZGpJdVlYZHpMbUpzYjJOclkyaGhhVzVq
      Ykc5MVpIQnZZeTFrWlhabApiRzl3TG1OdmJUQmxCZ2dxQXdRRkJnY0lBUVJaZXlKaGRIUnljeUk2
      ZXlKb1ppNUJabVpwYkdsaGRHbHZiaUk2CklpSXNJbWhtTGtWdWNtOXNiRzFsYm5SSlJDSTZJbTl5
      WkdWeVpYSXlMbk50WVhJdGJtVjBJaXdpYUdZdVZIbHcKWlNJNkltOXlaR1Z5WlhJaWZYMHdDZ1lJ
      S29aSXpqMEVBd0lEUndBd1JBSWdPZWRyTDhVaGRCLzV1Z1dtcHljagpWUGxPY2VWVVZ6TStONUhO
      RjNwZWFZc0NJQmVtRUtVcDRpc2NOMVVzZXY3QnJiRE5IbHAwdVJZelZMUER6ZTRpCmxIaXkKLS0t
      LS1FTkQgQ0VSVElGSUNBVEUtLS0tLQoiywgtLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0KTUlJ
      Qy96Q0NBcWFnQXdJQkFnSVVNd3M2TnI0cGY5K25DTE5KZHpHZDA1Ym5PN3d3Q2dZSUtvWkl6ajBF
      QXdJdwpWekVMTUFrR0ExVUVCaE1DUjBJeER6QU5CZ05WQkFnTUJreHZibVJ2YmpFUE1BMEdBMVVF
      Qnd3R1RHOXVaRzl1Ck1SQXdEZ1lEVlFRS0RBZFBjbVJsY21WeU1SUXdFZ1lEVlFRRERBdGpZUzV6
      YldGeUxXNWxkREFlRncweU1qQTMKTWpFd09USTVNREJhRncweU16QTNNakV3T1RNME1EQmFNR294
      Q3pBSkJnTlZCQVlUQWtkQ01Sc3dHUVlEVlFRSApFeEkxTVM0MU1DOHRNQzR4TXk5TWIyNWtiMjR4
      RURBT0JnTlZCQW9UQjA5eVpHVnlaWEl4RURBT0JnTlZCQXNUCkIyOXlaR1Z5WlhJeEdqQVlCZ05W
      QkFNVEVXOXlaR1Z5WlhJeUxuTnRZWEl0Ym1WME1Ga3dFd1lIS29aSXpqMEMKQVFZSUtvWkl6ajBE
      QVFjRFFnQUViOTBTeE1pd1h4UUxNdTRSa3Ria2tUbmVYZzNEaEVyVG0zQVJhTVYyak5weQo5WDVu
      Mytab1Rqb0xXbjY4SWR3akJ6TElmd2U4TDlpV0NXemdBc3h4OGFPQ0FUc3dnZ0UzTUE0R0ExVWRE
      d0VCCi93UUVBd0lEcURBZEJnTlZIU1VFRmpBVUJnZ3JCZ0VGQlFjREFRWUlLd1lCQlFVSEF3SXdE
      QVlEVlIwVEFRSC8KQkFJd0FEQWRCZ05WSFE0RUZnUVVJUFN2UXZrYUhyTnAvaVcydkhmSTcrcm5x
      N3N3SHdZRFZSMGpCQmd3Rm9BVQo0L3FrR3dYWTdwcE0wa2FpUWJvL0o3UHZyaEV3VVFZRFZSMFJC
      RW93U0lJUmIzSmtaWEpsY2pJdWMyMWhjaTF1ClpYU0NNMjl5WkdWeVpYSXlMbWhtTG1SbGRqSXVZ
      WGR6TG1Kc2IyTnJZMmhoYVc1amJHOTFaSEJ2WXkxa1pYWmwKYkc5d0xtTnZiVEJsQmdncUF3UUZC
      Z2NJQVFSWmV5SmhkSFJ5Y3lJNmV5Sm9aaTVCWm1acGJHbGhkR2x2YmlJNgpJaUlzSW1obUxrVnVj
      bTlzYkcxbGJuUkpSQ0k2SW05eVpHVnlaWEl5TG5OdFlYSXRibVYwSWl3aWFHWXVWSGx3ClpTSTZJ
      bTl5WkdWeVpYSWlmWDB3Q2dZSUtvWkl6ajBFQXdJRFJ3QXdSQUlnT2Vkckw4VWhkQi81dWdXbXB5
      Y2oKVlBsT2NlVlVWek0rTjVITkYzcGVhWXNDSUJlbUVLVXA0aXNjTjFVc2V2N0JyYkROSGxwMHVS
      WXpWTFBEemU0aQpsSGl5Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0KCtwRCjNvcmRlcmVyMy5o
      Zi5kZXYyLmF3cy5ibG9ja2NoYWluY2xvdWRwb2MtZGV2ZWxvcC5jb20Q+0EazwgtLS0tLUJFR0lO
      IENFUlRJRklDQVRFLS0tLS0KTUlJREFEQ0NBcWFnQXdJQkFnSVVIUW9lSDJ6MHZhWW9sS1BnTHZZ
      OFdFVFRpeUl3Q2dZSUtvWkl6ajBFQXdJdwpWekVMTUFrR0ExVUVCaE1DUjBJeER6QU5CZ05WQkFn
      TUJreHZibVJ2YmpFUE1BMEdBMVVFQnd3R1RHOXVaRzl1Ck1SQXdEZ1lEVlFRS0RBZFBjbVJsY21W
      eU1SUXdFZ1lEVlFRRERBdGpZUzV6YldGeUxXNWxkREFlRncweU1qQTMKTWpFd09USTVNREJhRncw
      eU16QTNNakV3T1RNME1EQmFNR294Q3pBSkJnTlZCQVlUQWtkQ01Sc3dHUVlEVlFRSApFeEkxTVM0
      MU1DOHRNQzR4TXk5TWIyNWtiMjR4RURBT0JnTlZCQW9UQjA5eVpHVnlaWEl4RURBT0JnTlZCQXNU
      CkIyOXlaR1Z5WlhJeEdqQVlCZ05WQkFNVEVXOXlaR1Z5WlhJekxuTnRZWEl0Ym1WME1Ga3dFd1lI
      S29aSXpqMEMKQVFZSUtvWkl6ajBEQVFjRFFnQUVsOFlFaFFOL1drVnFkdm9Sa2tBZzQzeUlVVURJ
      N1FwM3VweXhyalFlOWVydQpSZmpZVUYvM2F0QUNVdHptUkZ3WWJBNE13QnRXR09RNU93NGFPclFQ
      REtPQ0FUc3dnZ0UzTUE0R0ExVWREd0VCCi93UUVBd0lEcURBZEJnTlZIU1VFRmpBVUJnZ3JCZ0VG
      QlFjREFRWUlLd1lCQlFVSEF3SXdEQVlEVlIwVEFRSC8KQkFJd0FEQWRCZ05WSFE0RUZnUVV4UG5j
      eXVGL3llSm9Rb1o5MlRJYkZITHlwTVV3SHdZRFZSMGpCQmd3Rm9BVQo0L3FrR3dYWTdwcE0wa2Fp
      UWJvL0o3UHZyaEV3VVFZRFZSMFJCRW93U0lJUmIzSmtaWEpsY2pNdWMyMWhjaTF1ClpYU0NNMjl5
      WkdWeVpYSXpMbWhtTG1SbGRqSXVZWGR6TG1Kc2IyTnJZMmhoYVc1amJHOTFaSEJ2WXkxa1pYWmwK
      Ykc5d0xtTnZiVEJsQmdncUF3UUZCZ2NJQVFSWmV5SmhkSFJ5Y3lJNmV5Sm9aaTVCWm1acGJHbGhk
      R2x2YmlJNgpJaUlzSW1obUxrVnVjbTlzYkcxbGJuUkpSQ0k2SW05eVpHVnlaWEl6TG5OdFlYSXRi
      bVYwSWl3aWFHWXVWSGx3ClpTSTZJbTl5WkdWeVpYSWlmWDB3Q2dZSUtvWkl6ajBFQXdJRFNBQXdS
      UUloQUtRNy9DT2E3S2NNaE93MG1ndEsKazY2U3FHc1RDZkFPN0xIWUY3Zi9EVkJKQWlBSTFhcSt2
      ekRQQVQ0N3FrSXZNdTNoM3NFWlRuODEwSFhRb2pscApiVjJKY1E9PQotLS0tLUVORCBDRVJUSUZJ
      Q0FURS0tLS0tCiLPCC0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlEQURDQ0FxYWdBd0lC
      QWdJVUhRb2VIMnowdmFZb2xLUGdMdlk4V0VUVGl5SXdDZ1lJS29aSXpqMEVBd0l3ClZ6RUxNQWtH
      QTFVRUJoTUNSMEl4RHpBTkJnTlZCQWdNQmt4dmJtUnZiakVQTUEwR0ExVUVCd3dHVEc5dVpHOXUK
      TVJBd0RnWURWUVFLREFkUGNtUmxjbVZ5TVJRd0VnWURWUVFEREF0allTNXpiV0Z5TFc1bGREQWVG
      dzB5TWpBMwpNakV3T1RJNU1EQmFGdzB5TXpBM01qRXdPVE0wTURCYU1Hb3hDekFKQmdOVkJBWVRB
      a2RDTVJzd0dRWURWUVFICkV4STFNUzQxTUM4dE1DNHhNeTlNYjI1a2IyNHhFREFPQmdOVkJBb1RC
      MDl5WkdWeVpYSXhFREFPQmdOVkJBc1QKQjI5eVpHVnlaWEl4R2pBWUJnTlZCQU1URVc5eVpHVnla
      WEl6TG5OdFlYSXRibVYwTUZrd0V3WUhLb1pJemowQwpBUVlJS29aSXpqMERBUWNEUWdBRWw4WUVo
      UU4vV2tWcWR2b1Jra0FnNDN5SVVVREk3UXAzdXB5eHJqUWU5ZXJ1ClJmallVRi8zYXRBQ1V0em1S
      RndZYkE0TXdCdFdHT1E1T3c0YU9yUVBES09DQVRzd2dnRTNNQTRHQTFVZER3RUIKL3dRRUF3SURx
      REFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0RBWURWUjBUQVFILwpC
      QUl3QURBZEJnTlZIUTRFRmdRVXhQbmN5dUYveWVKb1FvWjkyVEliRkhMeXBNVXdId1lEVlIwakJC
      Z3dGb0FVCjQvcWtHd1hZN3BwTTBrYWlRYm8vSjdQdnJoRXdVUVlEVlIwUkJFb3dTSUlSYjNKa1pY
      Smxjak11YzIxaGNpMXUKWlhTQ00yOXlaR1Z5WlhJekxtaG1MbVJsZGpJdVlYZHpMbUpzYjJOclky
      aGhhVzVqYkc5MVpIQnZZeTFrWlhabApiRzl3TG1OdmJUQmxCZ2dxQXdRRkJnY0lBUVJaZXlKaGRI
      UnljeUk2ZXlKb1ppNUJabVpwYkdsaGRHbHZiaUk2CklpSXNJbWhtTGtWdWNtOXNiRzFsYm5SSlJD
      STZJbTl5WkdWeVpYSXpMbk50WVhJdGJtVjBJaXdpYUdZdVZIbHcKWlNJNkltOXlaR1Z5WlhJaWZY
      MHdDZ1lJS29aSXpqMEVBd0lEU0FBd1JRSWhBS1E3L0NPYTdLY01oT3cwbWd0SwprNjZTcUdzVENm
      QU83TEhZRjdmL0RWQkpBaUFJMWFxK3Z6RFBBVDQ3cWtJdk11M2gzc0VaVG44MTBIWFFvamxwCmJW
      MkpjUT09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0KEhIKBTUwMG1zEAoYASAFKICAgAgaBkFk
      bWlucyIqCg9CbG9ja1ZhbGlkYXRpb24SFxINCAMSCQoHV3JpdGVycxoGQWRtaW5zIiIKB1JlYWRl
      cnMSFxINCAMSCQoHUmVhZGVycxoGQWRtaW5zIiIKB1dyaXRlcnMSFxINCAMSCQoHV3JpdGVycxoG
      QWRtaW5zIiIKBkFkbWlucxIYEg4IAxIKCgZBZG1pbnMQAhoGQWRtaW5zKgZBZG1pbnMSxxcKC0Nv
      bnNvcnRpdW1zErcXEuwWChVTdXBwbHlDaGFpbkNvbnNvcnRpdW0S0hYS9BUKB2NtYXJNU1AS6BUa
      kBQKA01TUBKIFBL9ExL6EwoHY21hck1TUBLdBS0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpN
      SUlCOFRDQ0FaaWdBd0lCQWdJVU4zTUo5RlB1VXdaL2FyWThBTllZbTlFZlMyVXdDZ1lJS29aSXpq
      MEVBd0l3ClZ6RUxNQWtHQTFVRUJoTUNSMEl4RHpBTkJnTlZCQWdNQmt4dmJtUnZiakVQTUEwR0Ex
      VUVCd3dHVEc5dVpHOXUKTVJBd0RnWURWUVFLREFkRFlYSnlhV1Z5TVJRd0VnWURWUVFEREF0allT
      NWpiV0Z5TFc1bGREQWVGdzB5TWpBMwpNakV3T1RJMk1EbGFGdzB5TlRBMU1UQXdPVEkyTURsYU1G
      Y3hDekFKQmdOVkJBWVRBa2RDTVE4d0RRWURWUVFJCkRBWk1iMjVrYjI0eER6QU5CZ05WQkFjTUJr
      eHZibVJ2YmpFUU1BNEdBMVVFQ2d3SFEyRnljbWxsY2pFVU1CSUcKQTFVRUF3d0xZMkV1WTIxaGNp
      MXVaWFF3V1RBVEJnY3Foa2pPUFFJQkJnZ3Foa2pPUFFNQkJ3TkNBQVN3UFF6TgpiajRxL1IvNk1y
      aTJmTHkvQ1V6bHFEalVGdk1OYWRiWGpxQkxjN2NkQWFGUm0zL1UxYUZMaSttWlBPK0o2bVZrCjVC
      Szh3OXU3QlBaTDN2RDRvMEl3UURBUEJnTlZIUk1CQWY4RUJUQURBUUgvTUE0R0ExVWREd0VCL3dR
      RUF3SUIKcGpBZEJnTlZIUTRFRmdRVWNURWRQdWkyM3NkN0FyVFQ3U2g1MzVVaHhoRXdDZ1lJS29a
      SXpqMEVBd0lEUndBdwpSQUlnSS9RV0JQSUZ0cDg0TXFwU1pHUGZvT3dRU1lJUWJpZHRtM3BkUk9t
      NEhDa0NJR0ZybHM3a251dTVYNzZCCjFiOW9mbUJZNzhLQTE3YTE0akcwcDVLZ0txa24KLS0tLS1F
      TkQgQ0VSVElGSUNBVEUtLS0tLQoinggtLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0KTUlJQzNE
      Q0NBb09nQXdJQkFnSVVLQXdtbTZ4TXpOeHQ4cEh4UlFDS0hLbmYveEl3Q2dZSUtvWkl6ajBFQXdJ
      dwpWekVMTUFrR0ExVUVCaE1DUjBJeER6QU5CZ05WQkFnTUJreHZibVJ2YmpFUE1BMEdBMVVFQnd3
      R1RHOXVaRzl1Ck1SQXdEZ1lEVlFRS0RBZERZWEp5YVdWeU1SUXdFZ1lEVlFRRERBdGpZUzVqYldG
      eUxXNWxkREFlRncweU1qQTMKTWpFd09UTXhNREJhRncweU16QTNNakV3T1RNMk1EQmFNSEl4Q3pB
      SkJnTlZCQVlUQWtkQ01Sc3dHUVlEVlFRSApFeEkxTVM0MU1DOHRNQzR4TXk5TWIyNWtiMjR4RURB
      T0JnTlZCQW9UQjBOaGNuSnBaWEl4R3pBTUJnTlZCQXNUCkJXRmtiV2x1TUFzR0ExVUVDeE1FWTIx
      aGNqRVhNQlVHQTFVRUF3d09RV1J0YVc1QVkyMWhjaTF1WlhRd1dUQVQKQmdjcWhrak9QUUlCQmdn
      cWhrak9QUU1CQndOQ0FBUnBZZFMvUGNhWmlsYSs3akNOVkpxdlY0WXRheWtUKzRMTgpqSWU3Zjk1
      RFNHaDlhelJXRWFwN0dHQXhvQXp5aVhJKzQvcEd2ZGdNSlNnOFY3QmcyWVp6bzRJQkVEQ0NBUXd3
      CkRnWURWUjBQQVFIL0JBUURBZ2VBTUF3R0ExVWRFd0VCL3dRQ01BQXdIUVlEVlIwT0JCWUVGSmJ5
      YWwrT3loZzUKNXlhRDlERVhHc3ZYcjc4VU1COEdBMVVkSXdRWU1CYUFGSEV4SFQ3b3R0N0hld0sw
      MCswb2VkK1ZJY1lSTUNNRwpBMVVkRVFRY01CcUNHR05oTFhSdmIyeHpMV00wWW1RM056WmlOaTEy
      TnpjNU9EQ0JoZ1lJS2dNRUJRWUhDQUVFCmVuc2lZWFIwY25NaU9uc2lZV0poWXk1cGJtbDBJam9p
      ZEhKMVpTSXNJbUZrYldsdUlqb2lkSEoxWlNJc0ltaG0KTGtGbVptbHNhV0YwYVc5dUlqb2lZMjFo
      Y2lJc0ltaG1Ma1Z1Y205c2JHMWxiblJKUkNJNklrRmtiV2x1UUdOdApZWEl0Ym1WMElpd2lhR1l1
      Vkhsd1pTSTZJbUZrYldsdUluMTlNQW9HQ0NxR1NNNDlCQU1DQTBjQU1FUUNJQ0xRCmh0d2t2SURw
      ZmU0RFgrMG45VEkxY1BXcksySUNYa3dwcjkxcjVlY2tBaUJUQ1dvNExJVWhnbE9tYzNpWi9zUHkK
      d3NnR1NDSVAxQWF5TVlNMExjUG9Qdz09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0KQg4KBFNI
      QTISBlNIQTI1NkrdBS0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlCOFRDQ0FaaWdBd0lC
      QWdJVU4zTUo5RlB1VXdaL2FyWThBTllZbTlFZlMyVXdDZ1lJS29aSXpqMEVBd0l3ClZ6RUxNQWtH
      QTFVRUJoTUNSMEl4RHpBTkJnTlZCQWdNQmt4dmJtUnZiakVQTUEwR0ExVUVCd3dHVEc5dVpHOXUK
      TVJBd0RnWURWUVFLREFkRFlYSnlhV1Z5TVJRd0VnWURWUVFEREF0allTNWpiV0Z5TFc1bGREQWVG
      dzB5TWpBMwpNakV3T1RJMk1EbGFGdzB5TlRBMU1UQXdPVEkyTURsYU1GY3hDekFKQmdOVkJBWVRB
      a2RDTVE4d0RRWURWUVFJCkRBWk1iMjVrYjI0eER6QU5CZ05WQkFjTUJreHZibVJ2YmpFUU1BNEdB
      MVVFQ2d3SFEyRnljbWxsY2pFVU1CSUcKQTFVRUF3d0xZMkV1WTIxaGNpMXVaWFF3V1RBVEJnY3Fo
      a2pPUFFJQkJnZ3Foa2pPUFFNQkJ3TkNBQVN3UFF6TgpiajRxL1IvNk1yaTJmTHkvQ1V6bHFEalVG
      dk1OYWRiWGpxQkxjN2NkQWFGUm0zL1UxYUZMaSttWlBPK0o2bVZrCjVCSzh3OXU3QlBaTDN2RDRv
      MEl3UURBUEJnTlZIUk1CQWY4RUJUQURBUUgvTUE0R0ExVWREd0VCL3dRRUF3SUIKcGpBZEJnTlZI
      UTRFRmdRVWNURWRQdWkyM3NkN0FyVFQ3U2g1MzVVaHhoRXdDZ1lJS29aSXpqMEVBd0lEUndBdwpS
      QUlnSS9RV0JQSUZ0cDg0TXFwU1pHUGZvT3dRU1lJUWJpZHRtM3BkUk9tNEhDa0NJR0ZybHM3a251
      dTVYNzZCCjFiOW9mbUJZNzhLQTE3YTE0akcwcDVLZ0txa24KLS0tLS1FTkQgQ0VSVElGSUNBVEUt
      LS0tLQoaBkFkbWlucyIxCgZBZG1pbnMSJxIdCAESGRIIEgYIARICCAAaDRILCgdjbWFyTVNQEAEa
      BkFkbWlucyI0CgtFbmRvcnNlbWVudBIlEhsIARIXEggSBggBEgIIABoLEgkKB2NtYXJNU1AaBkFk
      bWlucyIwCgdSZWFkZXJzEiUSGwgBEhcSCBIGCAESAggAGgsSCQoHY21hck1TUBoGQWRtaW5zIjAK
      B1dyaXRlcnMSJRIbCAESFxIIEgYIARICCAAaCxIJCgdjbWFyTVNQGgZBZG1pbnMqBkFkbWlucxpA
      ChVDaGFubmVsQ3JlYXRpb25Qb2xpY3kSJxIMCAMSCAoGQWRtaW5zGhcvQ2hhbm5lbC9PcmRlcmVy
      L0FkbWlucyoXL0NoYW5uZWwvT3JkZXJlci9BZG1pbnMiLQoGQWRtaW5zEiMSCAgBEgQSAhIAGhcv
      Q2hhbm5lbC9PcmRlcmVyL0FkbWlucyoXL0NoYW5uZWwvT3JkZXJlci9BZG1pbnMaJgoQSGFzaGlu
      Z0FsZ29yaXRobRISEggKBlNIQTI1NhoGQWRtaW5zGi0KGUJsb2NrRGF0YUhhc2hpbmdTdHJ1Y3R1
      cmUSEBIGCP////8PGgZBZG1pbnMa3wEKEE9yZGVyZXJBZGRyZXNzZXMSygESrgEKOG9yZGVyZXIx
      LmhmLmRldjIuYXdzLmJsb2NrY2hhaW5jbG91ZHBvYy1kZXZlbG9wLmNvbTo4NDQzCjhvcmRlcmVy
      Mi5oZi5kZXYyLmF3cy5ibG9ja2NoYWluY2xvdWRwb2MtZGV2ZWxvcC5jb206ODQ0Mwo4b3JkZXJl
      cjMuaGYuZGV2Mi5hd3MuYmxvY2tjaGFpbmNsb3VkcG9jLWRldmVsb3AuY29tOjg0NDMaFy9DaGFu
      bmVsL09yZGVyZXIvQWRtaW5zGiQKDENhcGFiaWxpdGllcxIUEgoKCAoEVjJfMBIAGgZBZG1pbnMi
      IgoHV3JpdGVycxIXEg0IAxIJCgdXcml0ZXJzGgZBZG1pbnMiIgoGQWRtaW5zEhgSDggDEgoKBkFk
      bWlucxACGgZBZG1pbnMiIgoHUmVhZGVycxIXEg0IAxIJCgdSZWFkZXJzGgZBZG1pbnMqBkFkbWlu
      cxoOCgQKAgoACgAKAAoACgA=

    config:
      pod:
        resources:
          limits:
            memory: 512M
            cpu: 1
          requests:
            memory: 512M
            cpu: 0.5
