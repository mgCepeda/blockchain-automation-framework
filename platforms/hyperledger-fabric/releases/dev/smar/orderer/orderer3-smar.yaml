apiVersion: helm.fluxcd.io/v1
kind: HelmRelease
metadata:
  name: smar-orderer3
  namespace: smar-net
  annotations:
    fluxcd.io/automated: "false"
spec:
  releaseName: smar-orderer3
  chart:
    git: https://github.com/mgCepeda/blockchain-automation-framework.git
    ref: feature-1429
    path: platforms/hyperledger-fabric/charts/orderernode
    secretRef:
      name: gitcredentials
  values:
    metadata:
      namespace: smar-net
      images:
        orderer: hyperledger/fabric-orderer:2.2.2
        alpineutils: index.docker.io/hyperledgerlabs/alpine-utils:1.0
    orderer:
      name: orderer3
      loglevel: info
      localmspid: smarMSP
      tlsstatus: true
      keepaliveserverinterval: 10s
      refresh_cert_value: False
    
    consensus:
      name: raft

    storage:
      storageclassname: smarsc
      storagesize: 512Mi  

    service:
      servicetype: ClusterIP
      ports:
        grpc:
          clusteripport: 7050

    vault:
      address: http://vault.internal.dev2.aws.blockchaincloudpoc-develop.com:20001
      role: vault-role
      authpath: marsmar-net-auth
      secretprefix: secretsv2/data/crypto/ordererOrganizations/smar-net/orderers/orderer3.smar-net
      imagesecretname: regcred
      serviceaccountname: vault-auth

    proxy:
      provider: haproxy
      external_url_suffix: hf.dev2.aws.blockchaincloudpoc-develop.com

    genesis: |-
      CiIaIP/NAsW3Ml2CAeDIVQBiULbFCFilBKGaGp3pbR9CNL6lEpRqCpFqCo5qCngKWggBEAEaBgij
      2NmWBiIKc3lzY2hhbm5lbCpAMTAyNjYxZTc4Zjg3NmY2MzhiZjkzOTEzNmQxMmQ5M2Y1MDk3OTI4
      Zjc5NGI1YzZjNTYzNjc2MmExYTA2NmZmYhIaEhic/JmQ3frgix14b8bGmUFmHkFKg0mexHESkWkK
      jmkSi2kSzxcKC0NvbnNvcnRpdW1zEr8XEvQWChVTdXBwbHlDaGFpbkNvbnNvcnRpdW0S2hYS/BUK
      B2NtYXJNU1AS8BUamBQKA01TUBKQFBKFFBKCFAoHY21hck1TUBLhBS0tLS0tQkVHSU4gQ0VSVElG
      SUNBVEUtLS0tLQpNSUlCOGpDQ0FaaWdBd0lCQWdJVUFKMGtZU0M4SURKQWk4M1RXUlo4VVNHa2xh
      Y3dDZ1lJS29aSXpqMEVBd0l3ClZ6RUxNQWtHQTFVRUJoTUNSMEl4RHpBTkJnTlZCQWdNQmt4dmJt
      UnZiakVQTUEwR0ExVUVCd3dHVEc5dVpHOXUKTVJBd0RnWURWUVFLREFkRFlYSnlhV1Z5TVJRd0Vn
      WURWUVFEREF0allTNWpiV0Z5TFc1bGREQWVGdzB5TWpBMwpNVGt3T0RJeE1qaGFGdzB5TlRBMU1E
      Z3dPREl4TWpoYU1GY3hDekFKQmdOVkJBWVRBa2RDTVE4d0RRWURWUVFJCkRBWk1iMjVrYjI0eER6
      QU5CZ05WQkFjTUJreHZibVJ2YmpFUU1BNEdBMVVFQ2d3SFEyRnljbWxsY2pFVU1CSUcKQTFVRUF3
      d0xZMkV1WTIxaGNpMXVaWFF3V1RBVEJnY3Foa2pPUFFJQkJnZ3Foa2pPUFFNQkJ3TkNBQVNzRDNR
      SwpOc1RQWGZvRlIyV1FUZDkvMGI4cWp5WThHY1l0eWpuU0hOZU1yeGRadU5oaHFIWmF5S2NpUTFn
      MUhvNWEvQzJ4ClB2MFBHNTFhOUJOWTJJWWlvMEl3UURBUEJnTlZIUk1CQWY4RUJUQURBUUgvTUE0
      R0ExVWREd0VCL3dRRUF3SUIKcGpBZEJnTlZIUTRFRmdRVWlnelNUSkhTSjcrTGdabjVkSjM1MlNB
      V2ZBSXdDZ1lJS29aSXpqMEVBd0lEU0FBdwpSUUloQU9uSVYrQzBTdzdqTEpmYzhWMm1PN2dpOXFF
      QzFZcGJuL3VxV3I0TjlkeXhBaUFZZlA3Rnp6MmpBQjZoCkVNVHl5aXl3MjlGL0t2K1EydzRoR25X
      ZWJneUl0Zz09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0KIp4ILS0tLS1CRUdJTiBDRVJUSUZJ
      Q0FURS0tLS0tCk1JSUMzRENDQW9PZ0F3SUJBZ0lVVFFrclAzSm44a1lJdGc2T2JhK0pXbkJKNWNJ
      d0NnWUlLb1pJemowRUF3SXcKVnpFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1S
      dmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWREWVhKeWFXVnlNUlF3RWdZ
      RFZRUUREQXRqWVM1amJXRnlMVzVsZERBZUZ3MHlNakEzCk1Ua3dPREkzTURCYUZ3MHlNekEzTVRr
      d09ETXlNREJhTUhJeEN6QUpCZ05WQkFZVEFrZENNUnN3R1FZRFZRUUgKRXhJMU1TNDFNQzh0TUM0
      eE15OU1iMjVrYjI0eEVEQU9CZ05WQkFvVEIwTmhjbkpwWlhJeEd6QU1CZ05WQkFzVApCV0ZrYlds
      dU1Bc0dBMVVFQ3hNRVkyMWhjakVYTUJVR0ExVUVBd3dPUVdSdGFXNUFZMjFoY2kxdVpYUXdXVEFU
      CkJnY3Foa2pPUFFJQkJnZ3Foa2pPUFFNQkJ3TkNBQVJoZHNXaHFXdjhld0JNeFlKZmlKVmUxWjlP
      NjZCeXpqeXEKQTBjdUxiUTNvQ0JPRXlaMTdaZ2JUV2c4VVExSTVPWCtvVWtLUHpteVk0b002bC9X
      blIxbm80SUJFRENDQVF3dwpEZ1lEVlIwUEFRSC9CQVFEQWdlQU1Bd0dBMVVkRXdFQi93UUNNQUF3
      SFFZRFZSME9CQllFRkQ5ZVYrTjFoT05yCnhkcGNGVXl4Q2RsemloSldNQjhHQTFVZEl3UVlNQmFB
      RklvTTBreVIwaWUvaTRHWitYU2QrZGtnRm53Q01DTUcKQTFVZEVRUWNNQnFDR0dOaExYUnZiMnh6
      TFdNMFltUTNOelppTmkxbWRHWTRjakNCaGdZSUtnTUVCUVlIQ0FFRQplbnNpWVhSMGNuTWlPbnNp
      WVdKaFl5NXBibWwwSWpvaWRISjFaU0lzSW1Ga2JXbHVJam9pZEhKMVpTSXNJbWhtCkxrRm1abWxz
      YVdGMGFXOXVJam9pWTIxaGNpSXNJbWhtTGtWdWNtOXNiRzFsYm5SSlJDSTZJa0ZrYldsdVFHTnQK
      WVhJdGJtVjBJaXdpYUdZdVZIbHdaU0k2SW1Ga2JXbHVJbjE5TUFvR0NDcUdTTTQ5QkFNQ0EwY0FN
      RVFDSUNXQQoyMUU0Vllsdno2a20zYy9WQlZGSHkwa1c4bWhqckhiNFVxc1QvWDdNQWlBSGQxc3Uz
      OERqWXhPcTFGb0thMjlQCmpIZzRmYThibmVWay9NemE2VmFNdmc9PQotLS0tLUVORCBDRVJUSUZJ
      Q0FURS0tLS0tCkIOCgRTSEEyEgZTSEEyNTZK4QUtLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0K
      TUlJQjhqQ0NBWmlnQXdJQkFnSVVBSjBrWVNDOElESkFpODNUV1JaOFVTR2tsYWN3Q2dZSUtvWkl6
      ajBFQXdJdwpWekVMTUFrR0ExVUVCaE1DUjBJeER6QU5CZ05WQkFnTUJreHZibVJ2YmpFUE1BMEdB
      MVVFQnd3R1RHOXVaRzl1Ck1SQXdEZ1lEVlFRS0RBZERZWEp5YVdWeU1SUXdFZ1lEVlFRRERBdGpZ
      UzVqYldGeUxXNWxkREFlRncweU1qQTMKTVRrd09ESXhNamhhRncweU5UQTFNRGd3T0RJeE1qaGFN
      RmN4Q3pBSkJnTlZCQVlUQWtkQ01ROHdEUVlEVlFRSQpEQVpNYjI1a2IyNHhEekFOQmdOVkJBY01C
      a3h2Ym1SdmJqRVFNQTRHQTFVRUNnd0hRMkZ5Y21sbGNqRVVNQklHCkExVUVBd3dMWTJFdVkyMWhj
      aTF1WlhRd1dUQVRCZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DQUFTc0QzUUsKTnNUUFhmb0ZS
      MldRVGQ5LzBiOHFqeVk4R2NZdHlqblNITmVNcnhkWnVOaGhxSFpheUtjaVExZzFIbzVhL0MyeApQ
      djBQRzUxYTlCTlkySVlpbzBJd1FEQVBCZ05WSFJNQkFmOEVCVEFEQVFIL01BNEdBMVVkRHdFQi93
      UUVBd0lCCnBqQWRCZ05WSFE0RUZnUVVpZ3pTVEpIU0o3K0xnWm41ZEozNTJTQVdmQUl3Q2dZSUtv
      Wkl6ajBFQXdJRFNBQXcKUlFJaEFPbklWK0MwU3c3akxKZmM4VjJtTzdnaTlxRUMxWXBibi91cVdy
      NE45ZHl4QWlBWWZQN0Z6ejJqQUI2aApFTVR5eWl5dzI5Ri9LditRMnc0aEduV2ViZ3lJdGc9PQot
      LS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tChoGQWRtaW5zIjEKBkFkbWlucxInEh0IARIZEggSBggB
      EgIIABoNEgsKB2NtYXJNU1AQARoGQWRtaW5zIjQKC0VuZG9yc2VtZW50EiUSGwgBEhcSCBIGCAES
      AggAGgsSCQoHY21hck1TUBoGQWRtaW5zIjAKB1JlYWRlcnMSJRIbCAESFxIIEgYIARICCAAaCxIJ
      CgdjbWFyTVNQGgZBZG1pbnMiMAoHV3JpdGVycxIlEhsIARIXEggSBggBEgIIABoLEgkKB2NtYXJN
      U1AaBkFkbWlucyoGQWRtaW5zGkAKFUNoYW5uZWxDcmVhdGlvblBvbGljeRInEgwIAxIICgZBZG1p
      bnMaFy9DaGFubmVsL09yZGVyZXIvQWRtaW5zKhcvQ2hhbm5lbC9PcmRlcmVyL0FkbWlucyItCgZB
      ZG1pbnMSIxIICAESBBICEgAaFy9DaGFubmVsL09yZGVyZXIvQWRtaW5zKhcvQ2hhbm5lbC9PcmRl
      cmVyL0FkbWlucxLjTQoHT3JkZXJlchLXTRLbFQoHc21hck1TUBLPFRr3EwoDTVNQEu8TEuQTEuET
      CgdzbWFyTVNQEt0FLS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUI4VENDQVppZ0F3SUJB
      Z0lVQllPNGI0dTdWQVFMMDY0NUFuYVBxai95cUJvd0NnWUlLb1pJemowRUF3SXcKVnpFTE1Ba0dB
      MVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpN
      UkF3RGdZRFZRUUtEQWRQY21SbGNtVnlNUlF3RWdZRFZRUUREQXRqWVM1emJXRnlMVzVsZERBZUZ3
      MHlNakEzCk1Ua3dPREU1TWpkYUZ3MHlOVEExTURnd09ERTVNamRhTUZjeEN6QUpCZ05WQkFZVEFr
      ZENNUTh3RFFZRFZRUUkKREFaTWIyNWtiMjR4RHpBTkJnTlZCQWNNQmt4dmJtUnZiakVRTUE0R0Ex
      VUVDZ3dIVDNKa1pYSmxjakVVTUJJRwpBMVVFQXd3TFkyRXVjMjFoY2kxdVpYUXdXVEFUQmdjcWhr
      ak9QUUlCQmdncWhrak9QUU1CQndOQ0FBU01vOU1ICmV0cUlPNFAzR2lpcU9PallpeDNiZkpzYkdZ
      dDkwTW1hWXdzeEtLbXhrOUdtNmpOa1luRUJGVmhSK01KeTlXc0oKejk2Y0w1Tk1lWXFmc0llbW8w
      SXdRREFQQmdOVkhSTUJBZjhFQlRBREFRSC9NQTRHQTFVZER3RUIvd1FFQXdJQgpwakFkQmdOVkhR
      NEVGZ1FVMGNTblhjeEpiNEdyUUw4MWdYcFErWDdTODhJd0NnWUlLb1pJemowRUF3SURSd0F3ClJB
      SWdVamNRMHQzTlFFN3d2NytQbXNMd0J2bldoaEw1OGNKVlRWb1RnWStQUUhFQ0lBNzJYOEJac2xq
      aGJLTkQKTlNGbmI4SmJBanoyRTU0TGFVTHRNSUNxTU9XQgotLS0tLUVORCBDRVJUSUZJQ0FURS0t
      LS0tCiKFCC0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlDekRDQ0FuT2dBd0lCQWdJVUpx
      UThJYmFMRUxXZk5NWEc1d3kvQnU0THJ1Y3dDZ1lJS29aSXpqMEVBd0l3ClZ6RUxNQWtHQTFVRUJo
      TUNSMEl4RHpBTkJnTlZCQWdNQmt4dmJtUnZiakVQTUEwR0ExVUVCd3dHVEc5dVpHOXUKTVJBd0Rn
      WURWUVFLREFkUGNtUmxjbVZ5TVJRd0VnWURWUVFEREF0allTNXpiV0Z5TFc1bGREQWVGdzB5TWpB
      MwpNVGt3T0RJMU1EQmFGdzB5TXpBM01Ua3dPRE13TURCYU1HVXhDekFKQmdOVkJBWVRBa2RDTVJz
      d0dRWURWUVFICkV4STFNUzQxTUM4dE1DNHhNeTlNYjI1a2IyNHhFREFPQmdOVkJBb1RCMDl5WkdW
      eVpYSXhEakFNQmdOVkJBc1QKQldGa2JXbHVNUmN3RlFZRFZRUUREQTVCWkcxcGJrQnpiV0Z5TFc1
      bGREQlpNQk1HQnlxR1NNNDlBZ0VHQ0NxRwpTTTQ5QXdFSEEwSUFCTXljU25VNXZRS3lwTStyQnhZ
      Uy9NQnpyVG5VWWlTY1AwZmU5UXlBM0RsT21CdjkyUTUyCklpOGN6cDdNNGZjd2FFVmI2K0o1VUVZ
      ZWJTeFQvMG1adFUramdnRU5NSUlCQ1RBT0JnTlZIUThCQWY4RUJBTUMKQjRBd0RBWURWUjBUQVFI
      L0JBSXdBREFkQmdOVkhRNEVGZ1FVbVZiakhzWDVhTXpDS0x5aE1odTF2V0NveEZBdwpId1lEVlIw
      akJCZ3dGb0FVMGNTblhjeEpiNEdyUUw4MWdYcFErWDdTODhJd0pBWURWUjBSQkIwd0c0SVpZMkV0
      CmRHOXZiSE10TldJNU9HTTJaRGsxWkMxMGFqbHdOakNCZ2dZSUtnTUVCUVlIQ0FFRWRuc2lZWFIw
      Y25NaU9uc2kKWVdKaFl5NXBibWwwSWpvaWRISjFaU0lzSW1Ga2JXbHVJam9pZEhKMVpTSXNJbWht
      TGtGbVptbHNhV0YwYVc5dQpJam9pSWl3aWFHWXVSVzV5YjJ4c2JXVnVkRWxFSWpvaVFXUnRhVzVB
      YzIxaGNpMXVaWFFpTENKb1ppNVVlWEJsCklqb2lZV1J0YVc0aWZYMHdDZ1lJS29aSXpqMEVBd0lE
      UndBd1JBSWdGSmY5RU1iSFRCUVc0eUZZZFVFc0o1L3MKWmFkUUk1RGVobnNxcVM0ZzJYTUNJQzF1
      QzhRR242K21RaWJSNWlJbjdzbXFVaUxsMENBNDk3YTRuY2orbXB1dwotLS0tLUVORCBDRVJUSUZJ
      Q0FURS0tLS0tCkIOCgRTSEEyEgZTSEEyNTZK3QUtLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0K
      TUlJQjhUQ0NBWmlnQXdJQkFnSVVCWU80YjR1N1ZBUUwwNjQ1QW5hUHFqL3lxQm93Q2dZSUtvWkl6
      ajBFQXdJdwpWekVMTUFrR0ExVUVCaE1DUjBJeER6QU5CZ05WQkFnTUJreHZibVJ2YmpFUE1BMEdB
      MVVFQnd3R1RHOXVaRzl1Ck1SQXdEZ1lEVlFRS0RBZFBjbVJsY21WeU1SUXdFZ1lEVlFRRERBdGpZ
      UzV6YldGeUxXNWxkREFlRncweU1qQTMKTVRrd09ERTVNamRhRncweU5UQTFNRGd3T0RFNU1qZGFN
      RmN4Q3pBSkJnTlZCQVlUQWtkQ01ROHdEUVlEVlFRSQpEQVpNYjI1a2IyNHhEekFOQmdOVkJBY01C
      a3h2Ym1SdmJqRVFNQTRHQTFVRUNnd0hUM0prWlhKbGNqRVVNQklHCkExVUVBd3dMWTJFdWMyMWhj
      aTF1WlhRd1dUQVRCZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DQUFTTW85TUgKZXRxSU80UDNH
      aWlxT09qWWl4M2JmSnNiR1l0OTBNbWFZd3N4S0tteGs5R202ak5rWW5FQkZWaFIrTUp5OVdzSgp6
      OTZjTDVOTWVZcWZzSWVtbzBJd1FEQVBCZ05WSFJNQkFmOEVCVEFEQVFIL01BNEdBMVVkRHdFQi93
      UUVBd0lCCnBqQWRCZ05WSFE0RUZnUVUwY1NuWGN4SmI0R3JRTDgxZ1hwUStYN1M4OEl3Q2dZSUtv
      Wkl6ajBFQXdJRFJ3QXcKUkFJZ1VqY1EwdDNOUUU3d3Y3K1Btc0x3QnZuV2hoTDU4Y0pWVFZvVGdZ
      K1BRSEVDSUE3Mlg4QlpzbGpoYktORApOU0ZuYjhKYkFqejJFNTRMYVVMdE1JQ3FNT1dCCi0tLS0t
      RU5EIENFUlRJRklDQVRFLS0tLS0KGgZBZG1pbnMiMQoGQWRtaW5zEicSHQgBEhkSCBIGCAESAggA
      Gg0SCwoHc21hck1TUBABGgZBZG1pbnMiNAoLRW5kb3JzZW1lbnQSJRIbCAESFxIIEgYIARICCAAa
      CxIJCgdzbWFyTVNQGgZBZG1pbnMiMAoHUmVhZGVycxIlEhsIARIXEggSBggBEgIIABoLEgkKB3Nt
      YXJNU1AaBkFkbWlucyIwCgdXcml0ZXJzEiUSGwgBEhcSCBIGCAESAggAGgsSCQoHc21hck1TUBoG
      QWRtaW5zKgZBZG1pbnMaIgoJQmF0Y2hTaXplEhUSCwgKEICAgDEYgIBAGgZBZG1pbnMaHgoMQmF0
      Y2hUaW1lb3V0Eg4SBAoCMnMaBkFkbWlucxofChNDaGFubmVsUmVzdHJpY3Rpb25zEggaBkFkbWlu
      cxokCgxDYXBhYmlsaXRpZXMSFBIKCggKBFYyXzASABoGQWRtaW5zGss1Cg1Db25zZW5zdXNUeXBl
      Erk1Eq41CghldGNkcmFmdBKhNQrUEQozb3JkZXJlcjEuaGYuZGV2Mi5hd3MuYmxvY2tjaGFpbmNs
      b3VkcG9jLWRldmVsb3AuY29tEPtBGssILS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUMv
      ekNDQXFhZ0F3SUJBZ0lVUFhyRXJYcXBSK2pKcXNWMk5pUkFpakFXWHhJd0NnWUlLb1pJemowRUF3
      SXcKVnpFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3
      d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWRQY21SbGNtVnlNUlF3RWdZRFZRUUREQXRqWVM1emJX
      RnlMVzVsZERBZUZ3MHlNakEzCk1Ua3dPREkxTURCYUZ3MHlNekEzTVRrd09ETXdNREJhTUdveEN6
      QUpCZ05WQkFZVEFrZENNUnN3R1FZRFZRUUgKRXhJMU1TNDFNQzh0TUM0eE15OU1iMjVrYjI0eEVE
      QU9CZ05WQkFvVEIwOXlaR1Z5WlhJeEVEQU9CZ05WQkFzVApCMjl5WkdWeVpYSXhHakFZQmdOVkJB
      TVRFVzl5WkdWeVpYSXhMbk50WVhJdGJtVjBNRmt3RXdZSEtvWkl6ajBDCkFRWUlLb1pJemowREFR
      Y0RRZ0FFSitmSUlMdGRPbDBqTlRqZWV2MjhSNnpydEhkQ3dIaFVNYWFyaTIvNXZRY2cKUWdSRUpC
      Q1lkSDJLOEo4ZzJETEFZOStrQ3VsenV2ek93ZU5ESjV6Y0pLT0NBVHN3Z2dFM01BNEdBMVVkRHdF
      Qgovd1FFQXdJRHFEQWRCZ05WSFNVRUZqQVVCZ2dyQmdFRkJRY0RBUVlJS3dZQkJRVUhBd0l3REFZ
      RFZSMFRBUUgvCkJBSXdBREFkQmdOVkhRNEVGZ1FVMWpxb1k3L1V6RFEvSUFyRjdBQ2prTENLVVJF
      d0h3WURWUjBqQkJnd0ZvQVUKMGNTblhjeEpiNEdyUUw4MWdYcFErWDdTODhJd1VRWURWUjBSQkVv
      d1NJSVJiM0prWlhKbGNqRXVjMjFoY2kxdQpaWFNDTTI5eVpHVnlaWEl4TG1obUxtUmxkakl1WVhk
      ekxtSnNiMk5yWTJoaGFXNWpiRzkxWkhCdll5MWtaWFpsCmJHOXdMbU52YlRCbEJnZ3FBd1FGQmdj
      SUFRUlpleUpoZEhSeWN5STZleUpvWmk1QlptWnBiR2xoZEdsdmJpSTYKSWlJc0ltaG1Ma1Z1Y205
      c2JHMWxiblJKUkNJNkltOXlaR1Z5WlhJeExuTnRZWEl0Ym1WMElpd2lhR1l1VkhsdwpaU0k2SW05
      eVpHVnlaWElpZlgwd0NnWUlLb1pJemowRUF3SURSd0F3UkFJZ2Z4amZEQmY3L3FCWHhBQ09Rbmhi
      CkZIR05SekF4c0YvUlJ4eVBIaEUzdkRJQ0lCZ3J6YnNqRUVYMG9XY0ZmYlpFeENJeGpWWVpZcnBM
      eW1heHc2Y1AKV2V4VQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCiLLCC0tLS0tQkVHSU4gQ0VS
      VElGSUNBVEUtLS0tLQpNSUlDL3pDQ0FxYWdBd0lCQWdJVVBYckVyWHFwUitqSnFzVjJOaVJBaWpB
      V1h4SXdDZ1lJS29aSXpqMEVBd0l3ClZ6RUxNQWtHQTFVRUJoTUNSMEl4RHpBTkJnTlZCQWdNQmt4
      dmJtUnZiakVQTUEwR0ExVUVCd3dHVEc5dVpHOXUKTVJBd0RnWURWUVFLREFkUGNtUmxjbVZ5TVJR
      d0VnWURWUVFEREF0allTNXpiV0Z5TFc1bGREQWVGdzB5TWpBMwpNVGt3T0RJMU1EQmFGdzB5TXpB
      M01Ua3dPRE13TURCYU1Hb3hDekFKQmdOVkJBWVRBa2RDTVJzd0dRWURWUVFICkV4STFNUzQxTUM4
      dE1DNHhNeTlNYjI1a2IyNHhFREFPQmdOVkJBb1RCMDl5WkdWeVpYSXhFREFPQmdOVkJBc1QKQjI5
      eVpHVnlaWEl4R2pBWUJnTlZCQU1URVc5eVpHVnlaWEl4TG5OdFlYSXRibVYwTUZrd0V3WUhLb1pJ
      emowQwpBUVlJS29aSXpqMERBUWNEUWdBRUorZklJTHRkT2wwak5UamVldjI4UjZ6cnRIZEN3SGhV
      TWFhcmkyLzV2UWNnClFnUkVKQkNZZEgySzhKOGcyRExBWTkra0N1bHp1dnpPd2VOREo1emNKS09D
      QVRzd2dnRTNNQTRHQTFVZER3RUIKL3dRRUF3SURxREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNE
      QVFZSUt3WUJCUVVIQXdJd0RBWURWUjBUQVFILwpCQUl3QURBZEJnTlZIUTRFRmdRVTFqcW9ZNy9V
      ekRRL0lBckY3QUNqa0xDS1VSRXdId1lEVlIwakJCZ3dGb0FVCjBjU25YY3hKYjRHclFMODFnWHBR
      K1g3Uzg4SXdVUVlEVlIwUkJFb3dTSUlSYjNKa1pYSmxjakV1YzIxaGNpMXUKWlhTQ00yOXlaR1Z5
      WlhJeExtaG1MbVJsZGpJdVlYZHpMbUpzYjJOclkyaGhhVzVqYkc5MVpIQnZZeTFrWlhabApiRzl3
      TG1OdmJUQmxCZ2dxQXdRRkJnY0lBUVJaZXlKaGRIUnljeUk2ZXlKb1ppNUJabVpwYkdsaGRHbHZi
      aUk2CklpSXNJbWhtTGtWdWNtOXNiRzFsYm5SSlJDSTZJbTl5WkdWeVpYSXhMbk50WVhJdGJtVjBJ
      aXdpYUdZdVZIbHcKWlNJNkltOXlaR1Z5WlhJaWZYMHdDZ1lJS29aSXpqMEVBd0lEUndBd1JBSWdm
      eGpmREJmNy9xQlh4QUNPUW5oYgpGSEdOUnpBeHNGL1JSeHlQSGhFM3ZESUNJQmdyemJzakVFWDBv
      V2NGZmJaRXhDSXhqVllaWXJwTHltYXh3NmNQCldleFUKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0t
      LQoK3BEKM29yZGVyZXIyLmhmLmRldjIuYXdzLmJsb2NrY2hhaW5jbG91ZHBvYy1kZXZlbG9wLmNv
      bRD7QRrPCC0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlEQURDQ0FxYWdBd0lCQWdJVVBh
      OHVMcS9Dai9VUWp3a2NsTklrZTd1d3R4c3dDZ1lJS29aSXpqMEVBd0l3ClZ6RUxNQWtHQTFVRUJo
      TUNSMEl4RHpBTkJnTlZCQWdNQmt4dmJtUnZiakVQTUEwR0ExVUVCd3dHVEc5dVpHOXUKTVJBd0Rn
      WURWUVFLREFkUGNtUmxjbVZ5TVJRd0VnWURWUVFEREF0allTNXpiV0Z5TFc1bGREQWVGdzB5TWpB
      MwpNVGt3T0RJMU1EQmFGdzB5TXpBM01Ua3dPRE13TURCYU1Hb3hDekFKQmdOVkJBWVRBa2RDTVJz
      d0dRWURWUVFICkV4STFNUzQxTUM4dE1DNHhNeTlNYjI1a2IyNHhFREFPQmdOVkJBb1RCMDl5WkdW
      eVpYSXhFREFPQmdOVkJBc1QKQjI5eVpHVnlaWEl4R2pBWUJnTlZCQU1URVc5eVpHVnlaWEl5TG5O
      dFlYSXRibVYwTUZrd0V3WUhLb1pJemowQwpBUVlJS29aSXpqMERBUWNEUWdBRWE3ZUw4c3FPUkZI
      MXZhSFhDaXB1YzZEaVZHU2o5enNzRlRJT0pnOFU1UTNnCjBLTVQwS1d1QldUelJwU2FhYm80SHNi
      cG9Ea05mNjhLdy9NTkd0UCtaS09DQVRzd2dnRTNNQTRHQTFVZER3RUIKL3dRRUF3SURxREFkQmdO
      VkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0RBWURWUjBUQVFILwpCQUl3QURB
      ZEJnTlZIUTRFRmdRVWJPbGhHSnhmNHBvZWlzS2JoYlVVTEg4eVA3Z3dId1lEVlIwakJCZ3dGb0FV
      CjBjU25YY3hKYjRHclFMODFnWHBRK1g3Uzg4SXdVUVlEVlIwUkJFb3dTSUlSYjNKa1pYSmxjakl1
      YzIxaGNpMXUKWlhTQ00yOXlaR1Z5WlhJeUxtaG1MbVJsZGpJdVlYZHpMbUpzYjJOclkyaGhhVzVq
      Ykc5MVpIQnZZeTFrWlhabApiRzl3TG1OdmJUQmxCZ2dxQXdRRkJnY0lBUVJaZXlKaGRIUnljeUk2
      ZXlKb1ppNUJabVpwYkdsaGRHbHZiaUk2CklpSXNJbWhtTGtWdWNtOXNiRzFsYm5SSlJDSTZJbTl5
      WkdWeVpYSXlMbk50WVhJdGJtVjBJaXdpYUdZdVZIbHcKWlNJNkltOXlaR1Z5WlhJaWZYMHdDZ1lJ
      S29aSXpqMEVBd0lEU0FBd1JRSWhBS2t5Y3EwQkZ6VmRJUlpoMEtlOQpQVU1MK2dBQjBWdVVsczF2
      K3UraGt2UW9BaUFvaUZxVUZoOUQ5OUVxcUxOYzg2enJQMUJwQnA3TDU1YlYvZ3pOCkh1cERvQT09
      Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0KIs8ILS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0t
      Ck1JSURBRENDQXFhZ0F3SUJBZ0lVUGE4dUxxL0NqL1VRandrY2xOSWtlN3V3dHhzd0NnWUlLb1pJ
      emowRUF3SXcKVnpFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBH
      QTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWRQY21SbGNtVnlNUlF3RWdZRFZRUUREQXRq
      WVM1emJXRnlMVzVsZERBZUZ3MHlNakEzCk1Ua3dPREkxTURCYUZ3MHlNekEzTVRrd09ETXdNREJh
      TUdveEN6QUpCZ05WQkFZVEFrZENNUnN3R1FZRFZRUUgKRXhJMU1TNDFNQzh0TUM0eE15OU1iMjVr
      YjI0eEVEQU9CZ05WQkFvVEIwOXlaR1Z5WlhJeEVEQU9CZ05WQkFzVApCMjl5WkdWeVpYSXhHakFZ
      QmdOVkJBTVRFVzl5WkdWeVpYSXlMbk50WVhJdGJtVjBNRmt3RXdZSEtvWkl6ajBDCkFRWUlLb1pJ
      emowREFRY0RRZ0FFYTdlTDhzcU9SRkgxdmFIWENpcHVjNkRpVkdTajl6c3NGVElPSmc4VTVRM2cK
      MEtNVDBLV3VCV1R6UnBTYWFibzRIc2Jwb0RrTmY2OEt3L01OR3RQK1pLT0NBVHN3Z2dFM01BNEdB
      MVVkRHdFQgovd1FFQXdJRHFEQWRCZ05WSFNVRUZqQVVCZ2dyQmdFRkJRY0RBUVlJS3dZQkJRVUhB
      d0l3REFZRFZSMFRBUUgvCkJBSXdBREFkQmdOVkhRNEVGZ1FVYk9saEdKeGY0cG9laXNLYmhiVVVM
      SDh5UDdnd0h3WURWUjBqQkJnd0ZvQVUKMGNTblhjeEpiNEdyUUw4MWdYcFErWDdTODhJd1VRWURW
      UjBSQkVvd1NJSVJiM0prWlhKbGNqSXVjMjFoY2kxdQpaWFNDTTI5eVpHVnlaWEl5TG1obUxtUmxk
      akl1WVhkekxtSnNiMk5yWTJoaGFXNWpiRzkxWkhCdll5MWtaWFpsCmJHOXdMbU52YlRCbEJnZ3FB
      d1FGQmdjSUFRUlpleUpoZEhSeWN5STZleUpvWmk1QlptWnBiR2xoZEdsdmJpSTYKSWlJc0ltaG1M
      a1Z1Y205c2JHMWxiblJKUkNJNkltOXlaR1Z5WlhJeUxuTnRZWEl0Ym1WMElpd2lhR1l1Vkhsdwpa
      U0k2SW05eVpHVnlaWElpZlgwd0NnWUlLb1pJemowRUF3SURTQUF3UlFJaEFLa3ljcTBCRnpWZElS
      WmgwS2U5ClBVTUwrZ0FCMFZ1VWxzMXYrdStoa3ZRb0FpQW9pRnFVRmg5RDk5RXFxTE5jODZ6clAx
      QnBCcDdMNTViVi9nek4KSHVwRG9BPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQoK1BEKM29y
      ZGVyZXIzLmhmLmRldjIuYXdzLmJsb2NrY2hhaW5jbG91ZHBvYy1kZXZlbG9wLmNvbRD7QRrLCC0t
      LS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlDL3pDQ0FxYWdBd0lCQWdJVWRNU3pyVVFod1lH
      Zk9yU3NiV2JrcUhtc3lHZ3dDZ1lJS29aSXpqMEVBd0l3ClZ6RUxNQWtHQTFVRUJoTUNSMEl4RHpB
      TkJnTlZCQWdNQmt4dmJtUnZiakVQTUEwR0ExVUVCd3dHVEc5dVpHOXUKTVJBd0RnWURWUVFLREFk
      UGNtUmxjbVZ5TVJRd0VnWURWUVFEREF0allTNXpiV0Z5TFc1bGREQWVGdzB5TWpBMwpNVGt3T0RJ
      MU1EQmFGdzB5TXpBM01Ua3dPRE13TURCYU1Hb3hDekFKQmdOVkJBWVRBa2RDTVJzd0dRWURWUVFI
      CkV4STFNUzQxTUM4dE1DNHhNeTlNYjI1a2IyNHhFREFPQmdOVkJBb1RCMDl5WkdWeVpYSXhFREFP
      QmdOVkJBc1QKQjI5eVpHVnlaWEl4R2pBWUJnTlZCQU1URVc5eVpHVnlaWEl6TG5OdFlYSXRibVYw
      TUZrd0V3WUhLb1pJemowQwpBUVlJS29aSXpqMERBUWNEUWdBRU5ZeXZEMmFZY2tIcHhKZnhmZlpz
      Z0pndFp2WVRaMWxyZllIYnJqcVFnc1ZZCnRrckRyL1FKZEhDVFlVZ240cEZ2NW1qYlZSQmNHaGFC
      Z2htTEVMVHRCcU9DQVRzd2dnRTNNQTRHQTFVZER3RUIKL3dRRUF3SURxREFkQmdOVkhTVUVGakFV
      QmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0RBWURWUjBUQVFILwpCQUl3QURBZEJnTlZIUTRF
      RmdRVXBmNHdiQk5QM3hDdVJVaExKeGx0dFFkaHZESXdId1lEVlIwakJCZ3dGb0FVCjBjU25YY3hK
      YjRHclFMODFnWHBRK1g3Uzg4SXdVUVlEVlIwUkJFb3dTSUlSYjNKa1pYSmxjak11YzIxaGNpMXUK
      WlhTQ00yOXlaR1Z5WlhJekxtaG1MbVJsZGpJdVlYZHpMbUpzYjJOclkyaGhhVzVqYkc5MVpIQnZZ
      eTFrWlhabApiRzl3TG1OdmJUQmxCZ2dxQXdRRkJnY0lBUVJaZXlKaGRIUnljeUk2ZXlKb1ppNUJa
      bVpwYkdsaGRHbHZiaUk2CklpSXNJbWhtTGtWdWNtOXNiRzFsYm5SSlJDSTZJbTl5WkdWeVpYSXpM
      bk50WVhJdGJtVjBJaXdpYUdZdVZIbHcKWlNJNkltOXlaR1Z5WlhJaWZYMHdDZ1lJS29aSXpqMEVB
      d0lEUndBd1JBSWdWTm1odkdYSlhacUhjNTllMldIQwpZdWhvTFRZUVNUTGpKa2E2UzVkcERCTUNJ
      SDB2TUFnaXN1ekQ5NjF4YWREQ0hESjR2R0xGWGZrbytaUzdjKzliCmdpT3YKLS0tLS1FTkQgQ0VS
      VElGSUNBVEUtLS0tLQoiywgtLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0KTUlJQy96Q0NBcWFn
      QXdJQkFnSVVkTVN6clVRaHdZR2ZPclNzYldia3FIbXN5R2d3Q2dZSUtvWkl6ajBFQXdJdwpWekVM
      TUFrR0ExVUVCaE1DUjBJeER6QU5CZ05WQkFnTUJreHZibVJ2YmpFUE1BMEdBMVVFQnd3R1RHOXVa
      Rzl1Ck1SQXdEZ1lEVlFRS0RBZFBjbVJsY21WeU1SUXdFZ1lEVlFRRERBdGpZUzV6YldGeUxXNWxk
      REFlRncweU1qQTMKTVRrd09ESTFNREJhRncweU16QTNNVGt3T0RNd01EQmFNR294Q3pBSkJnTlZC
      QVlUQWtkQ01Sc3dHUVlEVlFRSApFeEkxTVM0MU1DOHRNQzR4TXk5TWIyNWtiMjR4RURBT0JnTlZC
      QW9UQjA5eVpHVnlaWEl4RURBT0JnTlZCQXNUCkIyOXlaR1Z5WlhJeEdqQVlCZ05WQkFNVEVXOXla
      R1Z5WlhJekxuTnRZWEl0Ym1WME1Ga3dFd1lIS29aSXpqMEMKQVFZSUtvWkl6ajBEQVFjRFFnQUVO
      WXl2RDJhWWNrSHB4SmZ4ZmZac2dKZ3RadllUWjFscmZZSGJyanFRZ3NWWQp0a3JEci9RSmRIQ1RZ
      VWduNHBGdjVtamJWUkJjR2hhQmdobUxFTFR0QnFPQ0FUc3dnZ0UzTUE0R0ExVWREd0VCCi93UUVB
      d0lEcURBZEJnTlZIU1VFRmpBVUJnZ3JCZ0VGQlFjREFRWUlLd1lCQlFVSEF3SXdEQVlEVlIwVEFR
      SC8KQkFJd0FEQWRCZ05WSFE0RUZnUVVwZjR3YkJOUDN4Q3VSVWhMSnhsdHRRZGh2REl3SHdZRFZS
      MGpCQmd3Rm9BVQowY1NuWGN4SmI0R3JRTDgxZ1hwUStYN1M4OEl3VVFZRFZSMFJCRW93U0lJUmIz
      SmtaWEpsY2pNdWMyMWhjaTF1ClpYU0NNMjl5WkdWeVpYSXpMbWhtTG1SbGRqSXVZWGR6TG1Kc2Iy
      TnJZMmhoYVc1amJHOTFaSEJ2WXkxa1pYWmwKYkc5d0xtTnZiVEJsQmdncUF3UUZCZ2NJQVFSWmV5
      SmhkSFJ5Y3lJNmV5Sm9aaTVCWm1acGJHbGhkR2x2YmlJNgpJaUlzSW1obUxrVnVjbTlzYkcxbGJu
      UkpSQ0k2SW05eVpHVnlaWEl6TG5OdFlYSXRibVYwSWl3aWFHWXVWSGx3ClpTSTZJbTl5WkdWeVpY
      SWlmWDB3Q2dZSUtvWkl6ajBFQXdJRFJ3QXdSQUlnVk5taHZHWEpYWnFIYzU5ZTJXSEMKWXVob0xU
      WVFTVExqSmthNlM1ZHBEQk1DSUgwdk1BZ2lzdXpEOTYxeGFkRENIREo0dkdMRlhma28rWlM3Yys5
      YgpnaU92Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0KEhIKBTUwMG1zEAoYASAFKICAgAgaBkFk
      bWlucyIiCgZBZG1pbnMSGBIOCAMSCgoGQWRtaW5zEAIaBkFkbWlucyIqCg9CbG9ja1ZhbGlkYXRp
      b24SFxINCAMSCQoHV3JpdGVycxoGQWRtaW5zIiIKB1JlYWRlcnMSFxINCAMSCQoHUmVhZGVycxoG
      QWRtaW5zIiIKB1dyaXRlcnMSFxINCAMSCQoHV3JpdGVycxoGQWRtaW5zKgZBZG1pbnMaLQoZQmxv
      Y2tEYXRhSGFzaGluZ1N0cnVjdHVyZRIQEgYI/////w8aBkFkbWlucxrfAQoQT3JkZXJlckFkZHJl
      c3NlcxLKARKuAQo4b3JkZXJlcjEuaGYuZGV2Mi5hd3MuYmxvY2tjaGFpbmNsb3VkcG9jLWRldmVs
      b3AuY29tOjg0NDMKOG9yZGVyZXIyLmhmLmRldjIuYXdzLmJsb2NrY2hhaW5jbG91ZHBvYy1kZXZl
      bG9wLmNvbTo4NDQzCjhvcmRlcmVyMy5oZi5kZXYyLmF3cy5ibG9ja2NoYWluY2xvdWRwb2MtZGV2
      ZWxvcC5jb206ODQ0MxoXL0NoYW5uZWwvT3JkZXJlci9BZG1pbnMaJAoMQ2FwYWJpbGl0aWVzEhQS
      CgoICgRWMl8wEgAaBkFkbWlucxomChBIYXNoaW5nQWxnb3JpdGhtEhISCAoGU0hBMjU2GgZBZG1p
      bnMiIgoHUmVhZGVycxIXEg0IAxIJCgdSZWFkZXJzGgZBZG1pbnMiIgoHV3JpdGVycxIXEg0IAxIJ
      CgdXcml0ZXJzGgZBZG1pbnMiIgoGQWRtaW5zEhgSDggDEgoKBkFkbWlucxACGgZBZG1pbnMqBkFk
      bWlucxoOCgQKAgoACgAKAAoACgA=

    config:
      pod:
        resources:
          limits:
            memory: 512M
            cpu: 1
          requests:
            memory: 512M
            cpu: 0.5
