apiVersion: helm.fluxcd.io/v1
kind: HelmRelease
metadata:
  name: smar-orderer2
  namespace: smar-net
  annotations:
    fluxcd.io/automated: "false"
spec:
  releaseName: smar-orderer2
  chart:
    git: https://github.com/mgCepeda/blockchain-automation-framework.git
    ref: feature-1429
    path: platforms/hyperledger-fabric/charts/orderernode
    secretRef:
      name: gitcredentials
  values:
    metadata:
      namespace: smar-net
      images:
        orderer: hyperledger/fabric-orderer:2.2.2
        alpineutils: index.docker.io/hyperledgerlabs/alpine-utils:1.0
    orderer:
      name: orderer2
      loglevel: info
      localmspid: smarMSP
      tlsstatus: true
      keepaliveserverinterval: 10s
      refresh_cert_value: False
    
    consensus:
      name: raft

    storage:
      storageclassname: smarsc
      storagesize: 512Mi  

    service:
      servicetype: ClusterIP
      ports:
        grpc:
          clusteripport: 7050

    vault:
      address: http://vault.internal.dev2.aws.blockchaincloudpoc-develop.com:20001
      role: vault-role
      authpath: marsmar-net-auth
      secretprefix: secretsv2/data/crypto/ordererOrganizations/smar-net/orderers/orderer2.smar-net
      imagesecretname: regcred
      serviceaccountname: vault-auth

    proxy:
      provider: haproxy
      external_url_suffix: hf.dev2.aws.blockchaincloudpoc-develop.com

    genesis: |-
      CiIaINbKmf8lsPxWXCIB9aAEcmwS4IlvOV5d8Ji+axvl+Z3bEplqCpZqCpNqCngKWggBEAEaBgj+
      i8CWBiIKc3lzY2hhbm5lbCpAOGJmNDI3ZGRjZmI2ZjQxZTExM2FjOTU5ZGJlMWE5MWI0ZTg0MWFm
      NTdlODZlYWY0NGFkYzU1OTA3ZTRlNTU5YhIaEhg1oTFbPQYTrRvgpUyH+LreYHRQfORXSZMSlmkK
      k2kSkGkS6E0KB09yZGVyZXIS3E0S4BUKB3NtYXJNU1AS1BUa/BMKA01TUBL0ExLpExLmEwoHc21h
      ck1TUBLdBS0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlCOFRDQ0FaaWdBd0lCQWdJVVpV
      YlNibjIxRzdkZnBCRGNlMWRadVlhb1p6RXdDZ1lJS29aSXpqMEVBd0l3ClZ6RUxNQWtHQTFVRUJo
      TUNSMEl4RHpBTkJnTlZCQWdNQmt4dmJtUnZiakVQTUEwR0ExVUVCd3dHVEc5dVpHOXUKTVJBd0Rn
      WURWUVFLREFkUGNtUmxjbVZ5TVJRd0VnWURWUVFEREF0allTNXpiV0Z5TFc1bGREQWVGdzB5TWpB
      MwpNVFF4TVRRM05UbGFGdzB5TlRBMU1ETXhNVFEzTlRsYU1GY3hDekFKQmdOVkJBWVRBa2RDTVE4
      d0RRWURWUVFJCkRBWk1iMjVrYjI0eER6QU5CZ05WQkFjTUJreHZibVJ2YmpFUU1BNEdBMVVFQ2d3
      SFQzSmtaWEpsY2pFVU1CSUcKQTFVRUF3d0xZMkV1YzIxaGNpMXVaWFF3V1RBVEJnY3Foa2pPUFFJ
      QkJnZ3Foa2pPUFFNQkJ3TkNBQVQvdjIvTApoNk1jSGRDMS9TajkveUtBK2srdzRaWFJ0UHJ3dHlq
      VlRFdXI1M3EzMWU3dW9wNXhsWEZPVGtNbVI5dDN4aXZzCmwwUWhZSkRUV3RQL2JaMkVvMEl3UURB
      UEJnTlZIUk1CQWY4RUJUQURBUUgvTUE0R0ExVWREd0VCL3dRRUF3SUIKcGpBZEJnTlZIUTRFRmdR
      VXZTb2QzdHFjdDZWWWtYa3MvMkhDZm9RR2dsUXdDZ1lJS29aSXpqMEVBd0lEUndBdwpSQUlnSGc5
      VWhWU0taZGJGRURFcHA0dUx6eHo1eE0yTkRxcTJlM0lMMlRzMG5PVUNJQzJ5Vk5pY1NrMER0cTBj
      CnFpaFc2K1dDdjRRUXJOejdPREhkNXdEZXg5cW4KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQoi
      iggtLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0KTUlJQ3pUQ0NBbk9nQXdJQkFnSVVlMTBjYzVu
      ZXA1SzRZWkdPSGZYVmpKODUzeGd3Q2dZSUtvWkl6ajBFQXdJdwpWekVMTUFrR0ExVUVCaE1DUjBJ
      eER6QU5CZ05WQkFnTUJreHZibVJ2YmpFUE1BMEdBMVVFQnd3R1RHOXVaRzl1Ck1SQXdEZ1lEVlFR
      S0RBZFBjbVJsY21WeU1SUXdFZ1lEVlFRRERBdGpZUzV6YldGeUxXNWxkREFlRncweU1qQTMKTVRR
      eE1UVXpNREJhRncweU16QTNNVFF4TVRVNE1EQmFNR1V4Q3pBSkJnTlZCQVlUQWtkQ01Sc3dHUVlE
      VlFRSApFeEkxTVM0MU1DOHRNQzR4TXk5TWIyNWtiMjR4RURBT0JnTlZCQW9UQjA5eVpHVnlaWEl4
      RGpBTUJnTlZCQXNUCkJXRmtiV2x1TVJjd0ZRWURWUVFEREE1QlpHMXBia0J6YldGeUxXNWxkREJa
      TUJNR0J5cUdTTTQ5QWdFR0NDcUcKU000OUF3RUhBMElBQkp2cElYZ1l3UVNlQjFkQkVtM1d0dmxi
      ZWFtMXF4MjBPTXNRdVFqMlUyM2lNbnhPb1FKeAp5MFdVMWJIeS9iS1pKdWNFQXZyd3R4ZDlFTWhF
      RVRXazNhbWpnZ0VOTUlJQkNUQU9CZ05WSFE4QkFmOEVCQU1DCkI0QXdEQVlEVlIwVEFRSC9CQUl3
      QURBZEJnTlZIUTRFRmdRVUFJWVorLzVqQlcrUk0xVXNZS0pZcEltZUhYY3cKSHdZRFZSMGpCQmd3
      Rm9BVXZTb2QzdHFjdDZWWWtYa3MvMkhDZm9RR2dsUXdKQVlEVlIwUkJCMHdHNElaWTJFdApkRzl2
      YkhNdE5XSTVPR00yWkRrMVpDMW5jMk01ZURDQmdnWUlLZ01FQlFZSENBRUVkbnNpWVhSMGNuTWlP
      bnNpCllXSmhZeTVwYm1sMElqb2lkSEoxWlNJc0ltRmtiV2x1SWpvaWRISjFaU0lzSW1obUxrRm1a
      bWxzYVdGMGFXOXUKSWpvaUlpd2lhR1l1Ulc1eWIyeHNiV1Z1ZEVsRUlqb2lRV1J0YVc1QWMyMWhj
      aTF1WlhRaUxDSm9aaTVVZVhCbApJam9pWVdSdGFXNGlmWDB3Q2dZSUtvWkl6ajBFQXdJRFNBQXdS
      UUloQU1KY3YrMTlUOUtzSWNFWGlXdk1XUUgzCnY5Unhqc2RZNmFWMHJnd0VtWCtHQWlBZkROQm9V
      THpDbXplQXZQaDN1N0JJTGxUVE1UTUg5Y3ZzWnpFQkJDeXQKQnc9PQotLS0tLUVORCBDRVJUSUZJ
      Q0FURS0tLS0tCkIOCgRTSEEyEgZTSEEyNTZK3QUtLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0K
      TUlJQjhUQ0NBWmlnQXdJQkFnSVVaVWJTYm4yMUc3ZGZwQkRjZTFkWnVZYW9aekV3Q2dZSUtvWkl6
      ajBFQXdJdwpWekVMTUFrR0ExVUVCaE1DUjBJeER6QU5CZ05WQkFnTUJreHZibVJ2YmpFUE1BMEdB
      MVVFQnd3R1RHOXVaRzl1Ck1SQXdEZ1lEVlFRS0RBZFBjbVJsY21WeU1SUXdFZ1lEVlFRRERBdGpZ
      UzV6YldGeUxXNWxkREFlRncweU1qQTMKTVRReE1UUTNOVGxhRncweU5UQTFNRE14TVRRM05UbGFN
      RmN4Q3pBSkJnTlZCQVlUQWtkQ01ROHdEUVlEVlFRSQpEQVpNYjI1a2IyNHhEekFOQmdOVkJBY01C
      a3h2Ym1SdmJqRVFNQTRHQTFVRUNnd0hUM0prWlhKbGNqRVVNQklHCkExVUVBd3dMWTJFdWMyMWhj
      aTF1WlhRd1dUQVRCZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DQUFUL3YyL0wKaDZNY0hkQzEv
      U2o5L3lLQStrK3c0WlhSdFByd3R5alZURXVyNTNxMzFlN3VvcDV4bFhGT1RrTW1SOXQzeGl2cwps
      MFFoWUpEVFd0UC9iWjJFbzBJd1FEQVBCZ05WSFJNQkFmOEVCVEFEQVFIL01BNEdBMVVkRHdFQi93
      UUVBd0lCCnBqQWRCZ05WSFE0RUZnUVV2U29kM3RxY3Q2VllrWGtzLzJIQ2ZvUUdnbFF3Q2dZSUtv
      Wkl6ajBFQXdJRFJ3QXcKUkFJZ0hnOVVoVlNLWmRiRkVERXBwNHVMenh6NXhNMk5EcXEyZTNJTDJU
      czBuT1VDSUMyeVZOaWNTazBEdHEwYwpxaWhXNitXQ3Y0UVFyTno3T0RIZDV3RGV4OXFuCi0tLS0t
      RU5EIENFUlRJRklDQVRFLS0tLS0KGgZBZG1pbnMiMAoHUmVhZGVycxIlEhsIARIXEggSBggBEgII
      ABoLEgkKB3NtYXJNU1AaBkFkbWlucyIwCgdXcml0ZXJzEiUSGwgBEhcSCBIGCAESAggAGgsSCQoH
      c21hck1TUBoGQWRtaW5zIjEKBkFkbWlucxInEh0IARIZEggSBggBEgIIABoNEgsKB3NtYXJNU1AQ
      ARoGQWRtaW5zIjQKC0VuZG9yc2VtZW50EiUSGwgBEhcSCBIGCAESAggAGgsSCQoHc21hck1TUBoG
      QWRtaW5zKgZBZG1pbnMaIgoJQmF0Y2hTaXplEhUSCwgKEICAgDEYgIBAGgZBZG1pbnMaHgoMQmF0
      Y2hUaW1lb3V0Eg4SBAoCMnMaBkFkbWlucxofChNDaGFubmVsUmVzdHJpY3Rpb25zEggaBkFkbWlu
      cxokCgxDYXBhYmlsaXRpZXMSFBIKCggKBFYyXzASABoGQWRtaW5zGss1Cg1Db25zZW5zdXNUeXBl
      Erk1Eq41CghldGNkcmFmdBKhNQrUEQozb3JkZXJlcjEuaGYuZGV2Mi5hd3MuYmxvY2tjaGFpbmNs
      b3VkcG9jLWRldmVsb3AuY29tEPtBGssILS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUMv
      ekNDQXFhZ0F3SUJBZ0lVUVhRZHhrM25zSUYrZ1o5TFN4MnNicHdjOFQwd0NnWUlLb1pJemowRUF3
      SXcKVnpFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3
      d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWRQY21SbGNtVnlNUlF3RWdZRFZRUUREQXRqWVM1emJX
      RnlMVzVsZERBZUZ3MHlNakEzCk1UUXhNVFV6TURCYUZ3MHlNekEzTVRReE1UVTRNREJhTUdveEN6
      QUpCZ05WQkFZVEFrZENNUnN3R1FZRFZRUUgKRXhJMU1TNDFNQzh0TUM0eE15OU1iMjVrYjI0eEVE
      QU9CZ05WQkFvVEIwOXlaR1Z5WlhJeEVEQU9CZ05WQkFzVApCMjl5WkdWeVpYSXhHakFZQmdOVkJB
      TVRFVzl5WkdWeVpYSXhMbk50WVhJdGJtVjBNRmt3RXdZSEtvWkl6ajBDCkFRWUlLb1pJemowREFR
      Y0RRZ0FFUVZ4MXRjbGVIUFAvU3hWUC8zaGRhZ2k1Vk9uQ2pxekJPZm94d2lzY2FvaDUKT21vUVRW
      YXRDSEJlR2lPR3JXTGlDdkZFL0RGa211SmJEZmI3V2Z0WGZhT0NBVHN3Z2dFM01BNEdBMVVkRHdF
      Qgovd1FFQXdJRHFEQWRCZ05WSFNVRUZqQVVCZ2dyQmdFRkJRY0RBUVlJS3dZQkJRVUhBd0l3REFZ
      RFZSMFRBUUgvCkJBSXdBREFkQmdOVkhRNEVGZ1FVZlpJM3UybFduQ1prTkN1Y01aQ3p4am9TazBr
      d0h3WURWUjBqQkJnd0ZvQVUKdlNvZDN0cWN0NlZZa1hrcy8ySENmb1FHZ2xRd1VRWURWUjBSQkVv
      d1NJSVJiM0prWlhKbGNqRXVjMjFoY2kxdQpaWFNDTTI5eVpHVnlaWEl4TG1obUxtUmxkakl1WVhk
      ekxtSnNiMk5yWTJoaGFXNWpiRzkxWkhCdll5MWtaWFpsCmJHOXdMbU52YlRCbEJnZ3FBd1FGQmdj
      SUFRUlpleUpoZEhSeWN5STZleUpvWmk1QlptWnBiR2xoZEdsdmJpSTYKSWlJc0ltaG1Ma1Z1Y205
      c2JHMWxiblJKUkNJNkltOXlaR1Z5WlhJeExuTnRZWEl0Ym1WMElpd2lhR1l1VkhsdwpaU0k2SW05
      eVpHVnlaWElpZlgwd0NnWUlLb1pJemowRUF3SURSd0F3UkFJZ1Zob1BSMUJZTlVJRkZDYnBhTVpw
      Cjg5Qm0rWjRnQmpua3hMblRZNzlsKzg4Q0lFUjV3NUpsMGtlc2ZzRENPR2J6cG4wNlYrYlgwYVBO
      M3BWaHBpUVEKOUVXUgotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCiLLCC0tLS0tQkVHSU4gQ0VS
      VElGSUNBVEUtLS0tLQpNSUlDL3pDQ0FxYWdBd0lCQWdJVVFYUWR4azNuc0lGK2daOUxTeDJzYnB3
      YzhUMHdDZ1lJS29aSXpqMEVBd0l3ClZ6RUxNQWtHQTFVRUJoTUNSMEl4RHpBTkJnTlZCQWdNQmt4
      dmJtUnZiakVQTUEwR0ExVUVCd3dHVEc5dVpHOXUKTVJBd0RnWURWUVFLREFkUGNtUmxjbVZ5TVJR
      d0VnWURWUVFEREF0allTNXpiV0Z5TFc1bGREQWVGdzB5TWpBMwpNVFF4TVRVek1EQmFGdzB5TXpB
      M01UUXhNVFU0TURCYU1Hb3hDekFKQmdOVkJBWVRBa2RDTVJzd0dRWURWUVFICkV4STFNUzQxTUM4
      dE1DNHhNeTlNYjI1a2IyNHhFREFPQmdOVkJBb1RCMDl5WkdWeVpYSXhFREFPQmdOVkJBc1QKQjI5
      eVpHVnlaWEl4R2pBWUJnTlZCQU1URVc5eVpHVnlaWEl4TG5OdFlYSXRibVYwTUZrd0V3WUhLb1pJ
      emowQwpBUVlJS29aSXpqMERBUWNEUWdBRVFWeDF0Y2xlSFBQL1N4VlAvM2hkYWdpNVZPbkNqcXpC
      T2ZveHdpc2Nhb2g1Ck9tb1FUVmF0Q0hCZUdpT0dyV0xpQ3ZGRS9ERmttdUpiRGZiN1dmdFhmYU9D
      QVRzd2dnRTNNQTRHQTFVZER3RUIKL3dRRUF3SURxREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNE
      QVFZSUt3WUJCUVVIQXdJd0RBWURWUjBUQVFILwpCQUl3QURBZEJnTlZIUTRFRmdRVWZaSTN1MmxX
      bkNaa05DdWNNWkN6eGpvU2swa3dId1lEVlIwakJCZ3dGb0FVCnZTb2QzdHFjdDZWWWtYa3MvMkhD
      Zm9RR2dsUXdVUVlEVlIwUkJFb3dTSUlSYjNKa1pYSmxjakV1YzIxaGNpMXUKWlhTQ00yOXlaR1Z5
      WlhJeExtaG1MbVJsZGpJdVlYZHpMbUpzYjJOclkyaGhhVzVqYkc5MVpIQnZZeTFrWlhabApiRzl3
      TG1OdmJUQmxCZ2dxQXdRRkJnY0lBUVJaZXlKaGRIUnljeUk2ZXlKb1ppNUJabVpwYkdsaGRHbHZi
      aUk2CklpSXNJbWhtTGtWdWNtOXNiRzFsYm5SSlJDSTZJbTl5WkdWeVpYSXhMbk50WVhJdGJtVjBJ
      aXdpYUdZdVZIbHcKWlNJNkltOXlaR1Z5WlhJaWZYMHdDZ1lJS29aSXpqMEVBd0lEUndBd1JBSWdW
      aG9QUjFCWU5VSUZGQ2JwYU1acAo4OUJtK1o0Z0Jqbmt4TG5UWTc5bCs4OENJRVI1dzVKbDBrZXNm
      c0RDT0dienBuMDZWK2JYMGFQTjNwVmhwaVFRCjlFV1IKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0t
      LQoK3BEKM29yZGVyZXIyLmhmLmRldjIuYXdzLmJsb2NrY2hhaW5jbG91ZHBvYy1kZXZlbG9wLmNv
      bRD7QRrPCC0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlEQURDQ0FxYWdBd0lCQWdJVWV2
      Wm5SOFJiOG55N2I0NVN2WUF5WENGRkZBSXdDZ1lJS29aSXpqMEVBd0l3ClZ6RUxNQWtHQTFVRUJo
      TUNSMEl4RHpBTkJnTlZCQWdNQmt4dmJtUnZiakVQTUEwR0ExVUVCd3dHVEc5dVpHOXUKTVJBd0Rn
      WURWUVFLREFkUGNtUmxjbVZ5TVJRd0VnWURWUVFEREF0allTNXpiV0Z5TFc1bGREQWVGdzB5TWpB
      MwpNVFF4TVRVek1EQmFGdzB5TXpBM01UUXhNVFU0TURCYU1Hb3hDekFKQmdOVkJBWVRBa2RDTVJz
      d0dRWURWUVFICkV4STFNUzQxTUM4dE1DNHhNeTlNYjI1a2IyNHhFREFPQmdOVkJBb1RCMDl5WkdW
      eVpYSXhFREFPQmdOVkJBc1QKQjI5eVpHVnlaWEl4R2pBWUJnTlZCQU1URVc5eVpHVnlaWEl5TG5O
      dFlYSXRibVYwTUZrd0V3WUhLb1pJemowQwpBUVlJS29aSXpqMERBUWNEUWdBRXNUbjAzdm1xOTEy
      djZ6eW9tbjRYRXh0RElqbjJ1RDFJWWhDYTd4WDVEdjIxCkpNeVlhUVRQMUpoRnhzMjUzVVdyQ3hj
      OHozZ3pCN3RzN2xxZ21BSlEwcU9DQVRzd2dnRTNNQTRHQTFVZER3RUIKL3dRRUF3SURxREFkQmdO
      VkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0RBWURWUjBUQVFILwpCQUl3QURB
      ZEJnTlZIUTRFRmdRVWtMZkFwbnE3cGNWRHlsUng1Z01odkpDQW9kOHdId1lEVlIwakJCZ3dGb0FV
      CnZTb2QzdHFjdDZWWWtYa3MvMkhDZm9RR2dsUXdVUVlEVlIwUkJFb3dTSUlSYjNKa1pYSmxjakl1
      YzIxaGNpMXUKWlhTQ00yOXlaR1Z5WlhJeUxtaG1MbVJsZGpJdVlYZHpMbUpzYjJOclkyaGhhVzVq
      Ykc5MVpIQnZZeTFrWlhabApiRzl3TG1OdmJUQmxCZ2dxQXdRRkJnY0lBUVJaZXlKaGRIUnljeUk2
      ZXlKb1ppNUJabVpwYkdsaGRHbHZiaUk2CklpSXNJbWhtTGtWdWNtOXNiRzFsYm5SSlJDSTZJbTl5
      WkdWeVpYSXlMbk50WVhJdGJtVjBJaXdpYUdZdVZIbHcKWlNJNkltOXlaR1Z5WlhJaWZYMHdDZ1lJ
      S29aSXpqMEVBd0lEU0FBd1JRSWhBS0dDQ3JIWUl1U1U5MVhBODlwKwo5VGpZTElMQjZmR1JyNWlJ
      Vk9FMG5yWVZBaUFHTVpUQ05hQm40dFBYcHdEMDdpeUJOVStHZCt5OW9EQkRyMkkyCjRoSnRMdz09
      Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0KIs8ILS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0t
      Ck1JSURBRENDQXFhZ0F3SUJBZ0lVZXZablI4UmI4bnk3YjQ1U3ZZQXlYQ0ZGRkFJd0NnWUlLb1pJ
      emowRUF3SXcKVnpFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBH
      QTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWRQY21SbGNtVnlNUlF3RWdZRFZRUUREQXRq
      WVM1emJXRnlMVzVsZERBZUZ3MHlNakEzCk1UUXhNVFV6TURCYUZ3MHlNekEzTVRReE1UVTRNREJh
      TUdveEN6QUpCZ05WQkFZVEFrZENNUnN3R1FZRFZRUUgKRXhJMU1TNDFNQzh0TUM0eE15OU1iMjVr
      YjI0eEVEQU9CZ05WQkFvVEIwOXlaR1Z5WlhJeEVEQU9CZ05WQkFzVApCMjl5WkdWeVpYSXhHakFZ
      QmdOVkJBTVRFVzl5WkdWeVpYSXlMbk50WVhJdGJtVjBNRmt3RXdZSEtvWkl6ajBDCkFRWUlLb1pJ
      emowREFRY0RRZ0FFc1RuMDN2bXE5MTJ2Nnp5b21uNFhFeHRESWpuMnVEMUlZaENhN3hYNUR2MjEK
      Sk15WWFRVFAxSmhGeHMyNTNVV3JDeGM4ejNnekI3dHM3bHFnbUFKUTBxT0NBVHN3Z2dFM01BNEdB
      MVVkRHdFQgovd1FFQXdJRHFEQWRCZ05WSFNVRUZqQVVCZ2dyQmdFRkJRY0RBUVlJS3dZQkJRVUhB
      d0l3REFZRFZSMFRBUUgvCkJBSXdBREFkQmdOVkhRNEVGZ1FVa0xmQXBucTdwY1ZEeWxSeDVnTWh2
      SkNBb2Q4d0h3WURWUjBqQkJnd0ZvQVUKdlNvZDN0cWN0NlZZa1hrcy8ySENmb1FHZ2xRd1VRWURW
      UjBSQkVvd1NJSVJiM0prWlhKbGNqSXVjMjFoY2kxdQpaWFNDTTI5eVpHVnlaWEl5TG1obUxtUmxk
      akl1WVhkekxtSnNiMk5yWTJoaGFXNWpiRzkxWkhCdll5MWtaWFpsCmJHOXdMbU52YlRCbEJnZ3FB
      d1FGQmdjSUFRUlpleUpoZEhSeWN5STZleUpvWmk1QlptWnBiR2xoZEdsdmJpSTYKSWlJc0ltaG1M
      a1Z1Y205c2JHMWxiblJKUkNJNkltOXlaR1Z5WlhJeUxuTnRZWEl0Ym1WMElpd2lhR1l1Vkhsdwpa
      U0k2SW05eVpHVnlaWElpZlgwd0NnWUlLb1pJemowRUF3SURTQUF3UlFJaEFLR0NDckhZSXVTVTkx
      WEE4OXArCjlUallMSUxCNmZHUnI1aUlWT0UwbnJZVkFpQUdNWlRDTmFCbjR0UFhwd0QwN2l5Qk5V
      K0dkK3k5b0RCRHIySTIKNGhKdEx3PT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQoK1BEKM29y
      ZGVyZXIzLmhmLmRldjIuYXdzLmJsb2NrY2hhaW5jbG91ZHBvYy1kZXZlbG9wLmNvbRD7QRrLCC0t
      LS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlDL3pDQ0FxYWdBd0lCQWdJVUorUVlmVDJxRis2
      bmdwdnZyanZkc0poSDBaRXdDZ1lJS29aSXpqMEVBd0l3ClZ6RUxNQWtHQTFVRUJoTUNSMEl4RHpB
      TkJnTlZCQWdNQmt4dmJtUnZiakVQTUEwR0ExVUVCd3dHVEc5dVpHOXUKTVJBd0RnWURWUVFLREFk
      UGNtUmxjbVZ5TVJRd0VnWURWUVFEREF0allTNXpiV0Z5TFc1bGREQWVGdzB5TWpBMwpNVFF4TVRV
      ek1EQmFGdzB5TXpBM01UUXhNVFU0TURCYU1Hb3hDekFKQmdOVkJBWVRBa2RDTVJzd0dRWURWUVFI
      CkV4STFNUzQxTUM4dE1DNHhNeTlNYjI1a2IyNHhFREFPQmdOVkJBb1RCMDl5WkdWeVpYSXhFREFP
      QmdOVkJBc1QKQjI5eVpHVnlaWEl4R2pBWUJnTlZCQU1URVc5eVpHVnlaWEl6TG5OdFlYSXRibVYw
      TUZrd0V3WUhLb1pJemowQwpBUVlJS29aSXpqMERBUWNEUWdBRURScE1hTUFvQ2RvUS9vNkRVVWZV
      UTEvY0RrMzd2bU1xWFRjRDh4TGpEbVl4CmkwSElqUm5JbjFGc2lCMmJlY2hobkpPd3FwWG5hQkJm
      U0xwZy8zSnloNk9DQVRzd2dnRTNNQTRHQTFVZER3RUIKL3dRRUF3SURxREFkQmdOVkhTVUVGakFV
      QmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0RBWURWUjBUQVFILwpCQUl3QURBZEJnTlZIUTRF
      RmdRVXZ0T3dPK2xYa2p6Y0RKTzVGSGZkNlQ5ajBob3dId1lEVlIwakJCZ3dGb0FVCnZTb2QzdHFj
      dDZWWWtYa3MvMkhDZm9RR2dsUXdVUVlEVlIwUkJFb3dTSUlSYjNKa1pYSmxjak11YzIxaGNpMXUK
      WlhTQ00yOXlaR1Z5WlhJekxtaG1MbVJsZGpJdVlYZHpMbUpzYjJOclkyaGhhVzVqYkc5MVpIQnZZ
      eTFrWlhabApiRzl3TG1OdmJUQmxCZ2dxQXdRRkJnY0lBUVJaZXlKaGRIUnljeUk2ZXlKb1ppNUJa
      bVpwYkdsaGRHbHZiaUk2CklpSXNJbWhtTGtWdWNtOXNiRzFsYm5SSlJDSTZJbTl5WkdWeVpYSXpM
      bk50WVhJdGJtVjBJaXdpYUdZdVZIbHcKWlNJNkltOXlaR1Z5WlhJaWZYMHdDZ1lJS29aSXpqMEVB
      d0lEUndBd1JBSWdkQ0xhYmFyYnZZTTlDMDV0TFliRwpzajJaWFlHcGVabi93MXhtb1luS05SWUNJ
      REFudGpZdzNnSVhnV0s5YkRMUUhwcS8yS1hCS0RwMDhKdkdNNzV3CkNtMFkKLS0tLS1FTkQgQ0VS
      VElGSUNBVEUtLS0tLQoiywgtLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0KTUlJQy96Q0NBcWFn
      QXdJQkFnSVVKK1FZZlQycUYrNm5ncHZ2cmp2ZHNKaEgwWkV3Q2dZSUtvWkl6ajBFQXdJdwpWekVM
      TUFrR0ExVUVCaE1DUjBJeER6QU5CZ05WQkFnTUJreHZibVJ2YmpFUE1BMEdBMVVFQnd3R1RHOXVa
      Rzl1Ck1SQXdEZ1lEVlFRS0RBZFBjbVJsY21WeU1SUXdFZ1lEVlFRRERBdGpZUzV6YldGeUxXNWxk
      REFlRncweU1qQTMKTVRReE1UVXpNREJhRncweU16QTNNVFF4TVRVNE1EQmFNR294Q3pBSkJnTlZC
      QVlUQWtkQ01Sc3dHUVlEVlFRSApFeEkxTVM0MU1DOHRNQzR4TXk5TWIyNWtiMjR4RURBT0JnTlZC
      QW9UQjA5eVpHVnlaWEl4RURBT0JnTlZCQXNUCkIyOXlaR1Z5WlhJeEdqQVlCZ05WQkFNVEVXOXla
      R1Z5WlhJekxuTnRZWEl0Ym1WME1Ga3dFd1lIS29aSXpqMEMKQVFZSUtvWkl6ajBEQVFjRFFnQUVE
      UnBNYU1Bb0Nkb1EvbzZEVVVmVVExL2NEazM3dm1NcVhUY0Q4eExqRG1ZeAppMEhJalJuSW4xRnNp
      QjJiZWNoaG5KT3dxcFhuYUJCZlNMcGcvM0p5aDZPQ0FUc3dnZ0UzTUE0R0ExVWREd0VCCi93UUVB
      d0lEcURBZEJnTlZIU1VFRmpBVUJnZ3JCZ0VGQlFjREFRWUlLd1lCQlFVSEF3SXdEQVlEVlIwVEFR
      SC8KQkFJd0FEQWRCZ05WSFE0RUZnUVV2dE93TytsWGtqemNESk81RkhmZDZUOWowaG93SHdZRFZS
      MGpCQmd3Rm9BVQp2U29kM3RxY3Q2VllrWGtzLzJIQ2ZvUUdnbFF3VVFZRFZSMFJCRW93U0lJUmIz
      SmtaWEpsY2pNdWMyMWhjaTF1ClpYU0NNMjl5WkdWeVpYSXpMbWhtTG1SbGRqSXVZWGR6TG1Kc2Iy
      TnJZMmhoYVc1amJHOTFaSEJ2WXkxa1pYWmwKYkc5d0xtTnZiVEJsQmdncUF3UUZCZ2NJQVFSWmV5
      SmhkSFJ5Y3lJNmV5Sm9aaTVCWm1acGJHbGhkR2x2YmlJNgpJaUlzSW1obUxrVnVjbTlzYkcxbGJu
      UkpSQ0k2SW05eVpHVnlaWEl6TG5OdFlYSXRibVYwSWl3aWFHWXVWSGx3ClpTSTZJbTl5WkdWeVpY
      SWlmWDB3Q2dZSUtvWkl6ajBFQXdJRFJ3QXdSQUlnZENMYWJhcmJ2WU05QzA1dExZYkcKc2oyWlhZ
      R3BlWm4vdzF4bW9ZbktOUllDSURBbnRqWXczZ0lYZ1dLOWJETFFIcHEvMktYQktEcDA4SnZHTTc1
      dwpDbTBZCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0KEhIKBTUwMG1zEAoYASAFKICAgAgaBkFk
      bWlucyIiCgZBZG1pbnMSGBIOCAMSCgoGQWRtaW5zEAIaBkFkbWlucyIqCg9CbG9ja1ZhbGlkYXRp
      b24SFxINCAMSCQoHV3JpdGVycxoGQWRtaW5zIiIKB1JlYWRlcnMSFxINCAMSCQoHUmVhZGVycxoG
      QWRtaW5zIiIKB1dyaXRlcnMSFxINCAMSCQoHV3JpdGVycxoGQWRtaW5zKgZBZG1pbnMSzxcKC0Nv
      bnNvcnRpdW1zEr8XEvQWChVTdXBwbHlDaGFpbkNvbnNvcnRpdW0S2hYS/BUKB2NtYXJNU1AS8BUa
      mBQKA01TUBKQFBKFFBKCFAoHY21hck1TUBLhBS0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpN
      SUlCOGpDQ0FaaWdBd0lCQWdJVWJDVVZZL0ZTY1dVaUxPNUh2MVhwaGZJVUxoVXdDZ1lJS29aSXpq
      MEVBd0l3ClZ6RUxNQWtHQTFVRUJoTUNSMEl4RHpBTkJnTlZCQWdNQmt4dmJtUnZiakVQTUEwR0Ex
      VUVCd3dHVEc5dVpHOXUKTVJBd0RnWURWUVFLREFkRFlYSnlhV1Z5TVJRd0VnWURWUVFEREF0allT
      NWpiV0Z5TFc1bGREQWVGdzB5TWpBMwpNVFF4TVRRNU5URmFGdzB5TlRBMU1ETXhNVFE1TlRGYU1G
      Y3hDekFKQmdOVkJBWVRBa2RDTVE4d0RRWURWUVFJCkRBWk1iMjVrYjI0eER6QU5CZ05WQkFjTUJr
      eHZibVJ2YmpFUU1BNEdBMVVFQ2d3SFEyRnljbWxsY2pFVU1CSUcKQTFVRUF3d0xZMkV1WTIxaGNp
      MXVaWFF3V1RBVEJnY3Foa2pPUFFJQkJnZ3Foa2pPUFFNQkJ3TkNBQVFRTk1NMwpOTDNmbWdPSHpj
      RmszbDVHTElxTGZkM2phdXRFYUE0VkJBMFhidDlacDhkbmRZUktUK3pnREhiL0VZME9QVWhjCjdZ
      Q2lDbmtIc2NIQ3puektvMEl3UURBUEJnTlZIUk1CQWY4RUJUQURBUUgvTUE0R0ExVWREd0VCL3dR
      RUF3SUIKcGpBZEJnTlZIUTRFRmdRVTErOTN6ZjR5Z2hRbWpUQ2NxZ2krL1dtSUFyZ3dDZ1lJS29a
      SXpqMEVBd0lEU0FBdwpSUUlnRGdOMC95RVlPWG0zdnlTN3FPbHBpRFNZNmFTSTFlWmhQNU42Y0I3
      TWNXb0NJUUMzTmQ5RWs2VnIybjczCm4wK1B1NitvZk1hNHlhK3VkTHlVWDFjRGthcm42dz09Ci0t
      LS0tRU5EIENFUlRJRklDQVRFLS0tLS0KIp4ILS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1J
      SUMzRENDQW9PZ0F3SUJBZ0lVZUR1L1RNKzRWcmlTWnAraDhUL284WUhvY1hJd0NnWUlLb1pJemow
      RUF3SXcKVnpFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFV
      RUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWREWVhKeWFXVnlNUlF3RWdZRFZRUUREQXRqWVM1
      amJXRnlMVzVsZERBZUZ3MHlNakEzCk1UUXhNVFUzTURCYUZ3MHlNekEzTVRReE1qQXlNREJhTUhJ
      eEN6QUpCZ05WQkFZVEFrZENNUnN3R1FZRFZRUUgKRXhJMU1TNDFNQzh0TUM0eE15OU1iMjVrYjI0
      eEVEQU9CZ05WQkFvVEIwTmhjbkpwWlhJeEd6QU1CZ05WQkFzVApCV0ZrYldsdU1Bc0dBMVVFQ3hN
      RVkyMWhjakVYTUJVR0ExVUVBd3dPUVdSdGFXNUFZMjFoY2kxdVpYUXdXVEFUCkJnY3Foa2pPUFFJ
      QkJnZ3Foa2pPUFFNQkJ3TkNBQVRnQ1JIZ2ZQK0hqeitkT21KQVNqaHdVYVk1MmxZMjJQVkMKdVFK
      cnBLRFUxdHB6d2dkcEFHTFhwaVIwN2RxZ1FuQWVnU3VZeHdwM0Z1MDVZNDAyY3hRTm80SUJFREND
      QVF3dwpEZ1lEVlIwUEFRSC9CQVFEQWdlQU1Bd0dBMVVkRXdFQi93UUNNQUF3SFFZRFZSME9CQllF
      RkxxcTk2ZVlSUk5jCjFGVWVhUzBrZjVINlRCNWRNQjhHQTFVZEl3UVlNQmFBRk5mdmQ4MytNb0lV
      Sm8wd25Lb0l2djFwaUFLNE1DTUcKQTFVZEVRUWNNQnFDR0dOaExYUnZiMnh6TFdNMFltUTNOelpp
      TmkxelltMXViVENCaGdZSUtnTUVCUVlIQ0FFRQplbnNpWVhSMGNuTWlPbnNpWVdKaFl5NXBibWww
      SWpvaWRISjFaU0lzSW1Ga2JXbHVJam9pZEhKMVpTSXNJbWhtCkxrRm1abWxzYVdGMGFXOXVJam9p
      WTIxaGNpSXNJbWhtTGtWdWNtOXNiRzFsYm5SSlJDSTZJa0ZrYldsdVFHTnQKWVhJdGJtVjBJaXdp
      YUdZdVZIbHdaU0k2SW1Ga2JXbHVJbjE5TUFvR0NDcUdTTTQ5QkFNQ0EwY0FNRVFDSUhWOApwYXNF
      L3VLMnNyWDEva1lvcDg4bFEvRE96WGJlZkF3bEdUaEQwSmxlQWlCY2t6ZklINmIwVGRndjZGYktj
      TU9rCnp2NG05OHNwZ0pIeEpoMnA5eC91T3c9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCkIO
      CgRTSEEyEgZTSEEyNTZK4QUtLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0KTUlJQjhqQ0NBWmln
      QXdJQkFnSVViQ1VWWS9GU2NXVWlMTzVIdjFYcGhmSVVMaFV3Q2dZSUtvWkl6ajBFQXdJdwpWekVM
      TUFrR0ExVUVCaE1DUjBJeER6QU5CZ05WQkFnTUJreHZibVJ2YmpFUE1BMEdBMVVFQnd3R1RHOXVa
      Rzl1Ck1SQXdEZ1lEVlFRS0RBZERZWEp5YVdWeU1SUXdFZ1lEVlFRRERBdGpZUzVqYldGeUxXNWxk
      REFlRncweU1qQTMKTVRReE1UUTVOVEZhRncweU5UQTFNRE14TVRRNU5URmFNRmN4Q3pBSkJnTlZC
      QVlUQWtkQ01ROHdEUVlEVlFRSQpEQVpNYjI1a2IyNHhEekFOQmdOVkJBY01Ca3h2Ym1SdmJqRVFN
      QTRHQTFVRUNnd0hRMkZ5Y21sbGNqRVVNQklHCkExVUVBd3dMWTJFdVkyMWhjaTF1WlhRd1dUQVRC
      Z2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DQUFRUU5NTTMKTkwzZm1nT0h6Y0ZrM2w1R0xJcUxm
      ZDNqYXV0RWFBNFZCQTBYYnQ5WnA4ZG5kWVJLVCt6Z0RIYi9FWTBPUFVoYwo3WUNpQ25rSHNjSEN6
      bnpLbzBJd1FEQVBCZ05WSFJNQkFmOEVCVEFEQVFIL01BNEdBMVVkRHdFQi93UUVBd0lCCnBqQWRC
      Z05WSFE0RUZnUVUxKzkzemY0eWdoUW1qVENjcWdpKy9XbUlBcmd3Q2dZSUtvWkl6ajBFQXdJRFNB
      QXcKUlFJZ0RnTjAveUVZT1htM3Z5UzdxT2xwaURTWTZhU0kxZVpoUDVONmNCN01jV29DSVFDM05k
      OUVrNlZyMm43MwpuMCtQdTYrb2ZNYTR5YSt1ZEx5VVgxY0RrYXJuNnc9PQotLS0tLUVORCBDRVJU
      SUZJQ0FURS0tLS0tChoGQWRtaW5zIjAKB1JlYWRlcnMSJRIbCAESFxIIEgYIARICCAAaCxIJCgdj
      bWFyTVNQGgZBZG1pbnMiMAoHV3JpdGVycxIlEhsIARIXEggSBggBEgIIABoLEgkKB2NtYXJNU1Aa
      BkFkbWlucyIxCgZBZG1pbnMSJxIdCAESGRIIEgYIARICCAAaDRILCgdjbWFyTVNQEAEaBkFkbWlu
      cyI0CgtFbmRvcnNlbWVudBIlEhsIARIXEggSBggBEgIIABoLEgkKB2NtYXJNU1AaBkFkbWlucyoG
      QWRtaW5zGkAKFUNoYW5uZWxDcmVhdGlvblBvbGljeRInEgwIAxIICgZBZG1pbnMaFy9DaGFubmVs
      L09yZGVyZXIvQWRtaW5zKhcvQ2hhbm5lbC9PcmRlcmVyL0FkbWlucyItCgZBZG1pbnMSIxIICAES
      BBICEgAaFy9DaGFubmVsL09yZGVyZXIvQWRtaW5zKhcvQ2hhbm5lbC9PcmRlcmVyL0FkbWlucxom
      ChBIYXNoaW5nQWxnb3JpdGhtEhISCAoGU0hBMjU2GgZBZG1pbnMaLQoZQmxvY2tEYXRhSGFzaGlu
      Z1N0cnVjdHVyZRIQEgYI/////w8aBkFkbWlucxrfAQoQT3JkZXJlckFkZHJlc3NlcxLKARKuAQo4
      b3JkZXJlcjEuaGYuZGV2Mi5hd3MuYmxvY2tjaGFpbmNsb3VkcG9jLWRldmVsb3AuY29tOjg0NDMK
      OG9yZGVyZXIyLmhmLmRldjIuYXdzLmJsb2NrY2hhaW5jbG91ZHBvYy1kZXZlbG9wLmNvbTo4NDQz
      CjhvcmRlcmVyMy5oZi5kZXYyLmF3cy5ibG9ja2NoYWluY2xvdWRwb2MtZGV2ZWxvcC5jb206ODQ0
      MxoXL0NoYW5uZWwvT3JkZXJlci9BZG1pbnMaJAoMQ2FwYWJpbGl0aWVzEhQSCgoICgRWMl8wEgAa
      BkFkbWlucyIiCgZBZG1pbnMSGBIOCAMSCgoGQWRtaW5zEAIaBkFkbWlucyIiCgdSZWFkZXJzEhcS
      DQgDEgkKB1JlYWRlcnMaBkFkbWlucyIiCgdXcml0ZXJzEhcSDQgDEgkKB1dyaXRlcnMaBkFkbWlu
      cyoGQWRtaW5zGg4KBAoCCgAKAAoACgAKAA==

    config:
      pod:
        resources:
          limits:
            memory: 512M
            cpu: 1
          requests:
            memory: 512M
            cpu: 0.5
